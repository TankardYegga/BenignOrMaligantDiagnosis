nohup: 忽略输入
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/filtered_features_10.csv
len of feats dict: 856
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
extra feats tensor([[-0.6227, -0.4330,  3.3895,  1.4231, -0.5251, -1.9845,  1.1491, -0.5824,
          0.2555,  0.9421]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.7500,  12.1544]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7235, -1.0159,  2.5012,  1.8711,  0.2028, -3.1062, -0.7023,  0.1013,
         -0.2126,  1.9426]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.1481,  4.4291]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7629, -1.6458, -0.4092, -0.6629,  0.6731,  0.3205,  1.9654,  0.3535,
         -0.6017, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9698, -7.0819]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8342, -0.4301, -0.3886, -0.5168,  0.6223,  0.6539,  0.2045, -0.3625,
         -0.9373, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0903, -7.2012]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4144, -1.6848, -0.3992, -0.6570,  1.7558,  0.8814, -1.5925, -0.2097,
          0.4141, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9759, -9.2333]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8961,  0.7828, -0.3393, -0.3346, -0.8397,  0.4031,  1.1455,  1.6542,
         -0.8925, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3742,  8.5213]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.1504, -0.7399, -0.3834, -0.4987, -0.8522,  0.9232,  0.4296, -2.0849,
          0.2724, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9972, -8.1545]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.0937, -0.4966, -0.4001, -0.6041, -0.9453,  0.8334,  0.2265, -0.6968,
          0.5387, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.6296, -8.7851]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7538,  0.3702, -0.4094, -0.5959, -0.8251,  0.8676,  1.2977, -1.0021,
          0.8185, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.6187, -5.7348]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3292, -0.4122, -0.3164, -0.2275,  0.5312, -1.0245, -1.3461,  1.0444,
         -1.0922, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.4873,  6.5813]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6376,  1.5232, -0.4331, -0.6571,  1.7070,  0.7561,  1.9585,  0.7893,
         -0.3766, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.5870, -5.7008]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7915, -0.7054, -0.3934, -0.2720, -0.6102,  0.6421, -0.1350,  0.4668,
         -0.7375, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.0971,  6.1432]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3377, -0.0327, -0.4312, -0.6196,  0.3306,  0.2614,  0.1134,  0.1588,
          1.1244, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.2410,  6.2311]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.2059,  0.9994, -0.3462, -0.4399, -0.5454,  0.3609,  1.3670, -0.9594,
          0.1490, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5967,  5.6852]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7292, -1.1013, -0.4030, -0.4078,  1.1349,  0.3418, -0.2445,  1.1083,
         -0.8447, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.4390,  6.4954]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1001, -0.6443, -0.4051, -0.6520, -0.7477,  0.5901,  1.0303, -1.9321,
          2.5158, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.0821,  5.0228]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5186, -0.0083, -0.3955, -0.4633,  0.5893,  0.2243, -0.0508,  1.0208,
         -1.3359, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.3481,  5.4375]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9179,  0.8949, -0.4218, -0.6356,  0.5430,  0.5901,  0.0354,  0.1697,
          1.2305, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.4875,  5.4788]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9760, -1.2439,  6.0844,  4.0058, -0.1023, -2.6620, -0.5294,  0.8688,
         -1.3556,  1.3423]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-13.1426,  13.7094]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0423, -1.4608, -0.4029, -0.6578,  1.1149,  0.6838,  0.2800,  1.8034,
         -0.8307, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.9469, -5.0297]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.4073,  1.3375, -0.4247, -0.6341,  2.1655,  0.0988, -0.0907,  1.0112,
         -0.1541, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5550, -6.7103]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0182, -0.4276, -0.3604, -0.3092, -0.8889,  0.5135,  0.5839,  0.3015,
         -0.8239, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9946,  7.0889]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.6241,  0.5883, -0.4039, -0.5126,  0.4052,  0.9165,  1.6130, -0.6650,
          0.3471, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.7845, -8.9343]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2338,  1.4428, -0.0726,  0.1018, -0.6989, -2.2370, -1.5297, -0.5278,
          0.2708, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.2287,  7.3063]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 4.7933, -1.1720, -0.4045, -0.6819,  3.0138,  0.2733,  0.5317, -1.5905,
          0.4409, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.5097, -7.6847]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4658,  1.1970, -0.2610,  0.2619, -0.5624,  0.6377,  0.5284, -0.2610,
          0.0063, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.1314,  7.2157]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2399,  0.5035, -0.0221, -0.1958, -0.4491, -2.6109,  0.7431, -0.8436,
          0.5785, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2212, -6.2758]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5280,  0.8315, -0.3909, -0.5131, -0.5028,  0.3766, -0.1111, -0.6035,
         -0.0178, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1513, -7.2686]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.9106,  0.1324, -0.2853, -0.3707,  0.5396,  0.7670,  0.2800, -2.2487,
         -0.0963, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5050,  7.5882]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0229,  0.3562, -0.0093,  0.1442, -0.5217, -0.9756, -0.4497, -0.6497,
         -0.4691,  0.2085]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6566,  8.8105]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 4.6240, -0.2827, -0.3247, -0.3213, -0.8230,  0.8777,  0.6880, -2.3410,
         -0.2590, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5753,  7.6935]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8105, -0.6374, -0.3965, -0.4324, -0.3941,  0.4022,  1.0146, -0.0045,
         -0.6804, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.2506,  6.3187]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8982, -0.6818, -0.3612, -0.3230,  0.4936,  0.5400, -0.2921,  0.9076,
         -0.3372, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1536, -7.3108]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3190, -1.1814, -0.4002, -0.6086, -0.6045,  0.6803,  0.2458,  0.3638,
         -0.8884, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7110, -7.8252]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7931, -0.4525, -0.3766, -0.3698, -0.7040,  0.6028,  0.2502,  1.6640,
          0.3534, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.0065,  5.0328]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9751,  0.0767,  1.2328,  3.1332, -0.5802,  0.3963,  0.8395, -0.7351,
         -0.9665, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.2402,  7.3735]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-7.1856e-01, -5.9076e-01,  8.0843e-01,  5.4477e-01, -1.8644e-01,
         -2.2248e+00,  7.4618e-05,  1.1173e-01, -1.8608e-01,  4.0858e-01]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.9623, 10.1859]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7472,  1.5544, -0.3251, -0.0567, -0.4657,  0.1555,  0.3147, -0.3966,
          0.4850, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4181, -7.5616]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3200, -0.7351, -0.3398, -0.4331, -0.1270,  0.6322,  0.3893,  1.1040,
         -0.2152, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.6872,  5.7551]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6808,  1.2700, -0.2652, -0.2577, -0.1572,  0.6694,  0.8122, -1.3380,
          0.2486, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7602, -5.8559]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M337.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M336.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B225.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B278.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B47LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M44LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B125.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B23LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B95LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M196.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B276.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M61LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M208.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M114LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M269.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M36RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M313.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M226.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M121.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B193.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B233.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M201.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B120LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M68RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B36RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M51RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B110LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B293.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M320.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M273.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M150.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M135.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B53LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B303.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M218.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M156.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M312.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B63LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M52LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B226.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B304.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B228.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M311.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M3LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B112LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B243.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B64RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M242.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B319.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M300.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M105LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M222.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B5LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B124.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
extra feats tensor([[ 0.8974,  0.1684, -0.3834, -0.5344,  0.3645,  0.4763, -0.2552, -0.3813,
         -0.5214, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7488, -5.8563]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.9467, -1.5035, -0.4029, -0.6587, -0.3469,  0.6422,  0.9587,  0.1968,
          0.3127, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.0334, -5.1401]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1193, -0.6191,  0.8342,  1.0447,  0.3342, -2.7058,  0.7473, -0.4243,
         -0.3869,  1.4757]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.0856,  6.3130]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7426, -0.4665,  0.7959,  0.5424, -0.2487, -2.0374, -0.2362,  0.1143,
         -0.1646,  0.3419]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.8798,  9.0788]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0389, -0.7577, -0.4042, -0.6342,  1.7055,  0.6419,  0.5786, -1.2452,
          0.0880, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.3970, -10.6296]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5419, -0.3386, -0.3689, -0.2787,  0.0661,  0.0094, -1.1439,  0.5586,
         -0.7364, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.3171, -7.4613]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0643, -0.8569, -0.4274, -0.6377, -0.5137,  0.2244,  0.6302,  0.6551,
         -0.2529, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1347, -7.2407]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0021, -1.2572, -0.3988, -0.5953, -0.4230,  0.8348,  1.0151, -0.6857,
         -0.8403, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3205,  8.4364]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6756, -1.2690, -0.4001, -0.6627,  6.3503,  0.6697,  0.5340, -0.3625,
         -0.3900, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9027, -6.1045]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9917,  0.7163, -0.0960,  0.5294,  0.1588, -0.6342, -0.5618,  1.0616,
         -0.6658, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6201,  8.7602]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7617, -0.2938,  0.3140,  0.7072,  0.5644, -2.1736, -2.1943,  0.5667,
         -0.5729,  0.0751]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0244,  7.1196]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7599, -0.1813, -0.4048, -0.5433, -0.0765,  0.1376,  0.0921,  0.9443,
         -0.6914, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.4921,  6.5548]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.2043,  1.4224, -0.4138, -0.6120, -0.3076, -0.5080, -0.7289,  1.8199,
          0.4975, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.4438, -6.5892]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.6461, -0.5591, -0.4042, -0.5121, -0.7973,  0.8986,  0.7590, -0.6649,
          0.3760, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.2001, -9.3552]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6313,  1.5208, -0.4258, -0.6419,  0.4117,  0.2484,  0.9088,  0.1146,
          0.1315, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6784,  6.7144]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3518, -0.8203, -0.3904, -0.3933, -0.6350,  0.6028,  0.5611,  0.1082,
         -0.6817, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8742,  7.9749]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.3848,  0.3832, -0.4002, -0.5800,  1.9984, -0.1077, -1.0584, -0.8648,
          0.3943, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5367,  5.5401]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0605,  0.4841, -0.3750, -0.3100, -0.5874,  0.6201, -0.0272, -0.0771,
         -0.2068, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9171,  7.9768]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1694, -0.2536, -0.2039, -0.2313, -0.2400, -1.1160, -1.6153, -0.9085,
          0.4116, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0274, -6.1583]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.9643, -0.9300, -0.4037, -0.6575, -0.0370,  0.8712,  1.0514, -1.0241,
          0.2765, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9891, -8.1386]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.3466, -1.3184, -0.3952, -0.6078, -0.9416,  0.3800,  0.6012,  0.2850,
         -0.7275, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0495,  7.1467]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0858, -0.6682, -0.3874, -0.5149, -0.3906,  0.8430,  0.6505, -0.5853,
         -0.3262, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6419,  6.7221]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3098,  1.4338, -0.3487, -0.4508,  0.3507,  0.3030,  0.3675, -1.2791,
          0.2867, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8569,  6.8929]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5713, -0.8667,  3.1094,  2.8980, -0.2751, -2.2311,  1.0746, -0.1268,
         -0.4901,  0.6087]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-12.1910,  12.5543]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3513, -1.7462, -0.3939, -0.6665, -0.7217,  0.5837, -1.1031, -0.0925,
         -0.7268, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7933,  7.8436]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1654, -0.3430, -0.4093, -0.6490,  0.3895,  0.5785,  1.0214,  0.4464,
          0.1928, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9765,  7.0256]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2859, -0.6385, -0.3462, -0.2937, -0.8602,  0.6375,  1.4359, -1.4896,
         -0.6618, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.2272, -5.3099]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2328,  0.4599,  0.3376,  0.2633,  0.3490, -0.8098, -1.6280,  0.7539,
         -0.4313, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8765,  7.9889]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4632, -0.1118, -0.3996, -0.5513,  0.2942,  0.7306,  0.7106, -1.6028,
          2.0910, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.2714, -9.5053]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1013, -0.0676,  0.6168,  1.0761, -0.4791, -1.3219, -1.9477,  1.2631,
         -1.1915,  2.6762]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.0333,  10.3538]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5299,  0.9612,  0.1471,  1.0848, -0.4594,  0.6244,  0.0238, -0.5253,
         -0.8626, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8280,  6.9287]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5514, -1.2003, -0.4002, -0.6597, -0.2109,  0.3528,  1.0606, -1.5339,
          0.1176, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6045, -7.7503]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9613,  1.5035, -0.1931, -0.0185,  1.1659,  0.6478,  0.6323,  0.0189,
         -0.1184, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2944, -6.4394]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1478,  1.0809, -0.4065, -0.5942, -0.2840,  0.4255,  1.9406, -0.4931,
          1.0305, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.8854, -10.0802]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8228,  1.6607, -0.2735, -0.3511, -0.4870,  0.3464, -0.0184,  0.3042,
          0.8473, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9648,  7.0481]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0531, -1.1851, -0.3992, -0.6606, -0.2434,  0.6355,  1.5545, -0.8234,
          1.0977, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7285, -7.8977]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1087, -0.0799,  1.3301,  1.8134, -0.5220, -0.3052, -1.3759, -0.3633,
         -0.3352,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.9997, 10.1941]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2006,  1.3297, -0.3905, -0.4337, -0.0293,  0.2814, -0.0607,  0.7499,
         -0.9129, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8498,  7.9624]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.8447,  1.5337, -0.3174, -0.2269, -0.4743,  0.7324,  0.7337,  0.2779,
         -1.1893, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.2727,  6.4023]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4655,  0.8073,  0.3358,  0.6347, -0.3302, -0.0250, -0.4566, -0.8338,
          0.0051, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6293, -7.7287]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.1135, -1.4911, -0.3941, -0.6503, -0.4497,  0.5988, -0.5057,  0.2575,
         -0.2261, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9947, -8.1191]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1525, -0.3694, -0.3963, -0.5578, -0.8195,  0.6061,  0.6017,  0.0782,
         -0.6737, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7607, -6.8696]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1023,  0.5569, -0.3307, -0.3304,  0.9919,  0.0055,  0.2671, -1.3697,
         -0.0740, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8870,  6.9513]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9060,  1.2445, -0.4306, -0.6314, -0.4099,  0.5677,  0.3506,  0.4857,
          0.2896, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.7937,  6.8395]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1101,  0.1494, -0.3942, -0.4660, -0.6062,  0.7107,  1.4707,  0.3227,
          0.0283, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.5754, -5.6659]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9640, -1.0864, -0.4013, -0.6151, -0.7050,  0.8345,  0.2653, -0.4920,
          0.9249, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0646, -6.2228]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6160,  0.2128,  0.2521,  0.1277,  0.5686, -0.1468, -0.2847, -0.4252,
          0.3813, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.8712, -4.9612]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7130,  0.1333, -0.1781,  0.4098, -0.6545,  0.2593,  1.2349,  1.1931,
         -1.1796, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.5887, -7.6647]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2427,  0.6183, -0.2067, -0.3480,  0.4135,  0.0453,  0.5207, -1.6553,
          0.9778, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1257, -6.2709]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.4508, -0.1061, -0.1429, -0.1743, -0.7944,  0.2604,  0.6406, -0.3691,
         -0.6527, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.5224,  6.6279]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7958, -0.6668, -0.2871,  0.2537, -0.5512,  0.1260,  0.0707,  0.6130,
         -0.8065, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3172, -8.4325]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4688,  0.3978, -0.3452, -0.4987,  2.6356, -0.8252, -1.3744, -0.6220,
          0.3021, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.0330, -8.2332]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2796,  0.5364, -0.4120, -0.6312, -0.4048,  0.8883,  1.3406, -0.8386,
          0.0856, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2429, -6.3526]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1530, -0.9858, -0.4025, -0.5753,  0.4917,  0.5638,  0.4402,  0.3487,
          0.5707, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4244,  7.4686]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7630,  1.4554, -0.3737, -0.3653,  0.0583,  0.2532,  0.7335,  0.1977,
         -0.6076, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.0012,  6.0679]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2055, -1.0642, -0.4019, -0.6406, -0.5130,  0.4980, -0.1007, -0.9057,
          0.7306, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9135, -7.0749]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0406, -0.2909,  2.0536,  3.3330, -0.8031,  0.4155,  0.8514,  0.7937,
         -1.6891, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.1258, -5.1149]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8908, -0.5181,  0.6481,  1.0914, -0.1000, -2.3745, -1.7940,  1.0018,
         -0.6446,  1.0088]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.7469,  11.9926]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7134, -1.0918, -0.4074, -0.6596, -0.8200,  0.8025,  0.2703, -1.3855,
          1.9130, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7202, -7.9374]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7989, -0.2559, -0.2465,  0.2834,  0.2708,  0.3707,  0.0951,  3.1812,
         -0.4003, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.7258,  6.8052]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M4LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M82LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M207.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M18RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B162.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B190.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M250.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M323.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M17LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M80LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M55RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M33LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B229.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M315.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B221.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M102LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M116LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B298.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B4RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B78RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M67RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B158.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M185.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M81RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M103LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B111RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B32LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B57RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M230.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M176.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B95LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B209.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B271.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B18RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B268.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M10RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B317.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B176.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B87RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M276.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M38LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B115RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B9RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M90RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B157.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M325.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B21LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B273.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M159.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M212.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B55RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M91LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B10LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B301.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.4456,  0.5974, -0.2634, -0.2562,  0.1988,  0.7722,  0.3798, -1.3385,
          0.3506, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7535, -7.9035]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.2436, -1.2950, -0.4025, -0.6663,  0.5024,  0.7236,  2.7954,  0.8267,
          1.4841, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.8898, -9.0818]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2677,  0.4303, -0.3740, -0.4499, -0.5582, -0.8097, -1.0827, -0.7316,
          0.7334, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6174,  7.6632]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0774, -0.6748, -0.4157, -0.6351, -0.1141,  0.2066,  1.6061,  0.5727,
          0.8935, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.2654,  7.3133]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5602,  0.9047, -0.3851, -0.4869,  2.0983, -0.7191, -0.9502, -0.0461,
          0.5304, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.4244, -8.6189]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9714,  0.9089, -0.2277,  0.1390,  0.6268, -0.1939, -1.1027,  1.2193,
         -0.6943, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9108,  6.9915]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7646,  1.6185, -0.3906, -0.4880,  0.6874, -0.1544,  0.0672,  0.3203,
         -0.5637, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9861, -7.0989]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0772,  2.0984, -0.4231, -0.6219, -0.0711,  0.3552,  0.2277,  0.6955,
          1.0551, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.3900, -9.5851]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3939, -0.9635, -0.3881, -0.5276, -0.7390,  0.7659, -0.2892,  0.2019,
         -0.4912, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.6986, -4.7881]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.5302, -1.6107, -0.3985, -0.6592,  2.6560,  0.8354, -1.0524, -0.7837,
          1.0855, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.8797, -8.1438]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8688, -0.4940, -0.3518, -0.5588, -0.3032,  0.2396,  0.7233,  0.1075,
         -0.2116, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6085,  6.6681]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2131, -0.3002, -0.3528, -0.3599, -0.6875,  0.6007,  1.0720, -0.7382,
         -0.8927, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8239,  6.9122]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6408, -1.2228, -0.4032, -0.6573, -0.1431,  0.8815,  0.8023,  0.3504,
          2.8075, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.4566, -8.7061]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.1675, -1.3289, -0.4093, -0.6808,  2.8067,  0.9728,  1.3540, -2.3115,
          3.6206, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.2712, -10.6180]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6722, -0.3208, -0.4175, -0.6308,  0.7362,  0.5200,  0.5121,  1.0371,
          0.9380, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.3440, -9.5634]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8763,  0.0940, -0.3552, -0.3971, -0.4109, -0.0750, -0.5237,  1.1458,
         -0.3713, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.4492, -5.5512]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0952, -0.3128, -0.3531, -0.5072,  1.4034, -1.4710, -0.6515,  0.1649,
         -0.4996, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.6432, -6.7596]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6640, -1.0895, -0.3932, -0.5190, -0.2174,  0.6278,  0.2026, -1.0006,
         -0.7470, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1704,  6.2312]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3213, -0.6183, -0.3999, -0.6040, -0.8426,  0.7473,  0.2344, -0.9194,
          0.9802, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.3953, -10.6114]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5994,  0.6512, -0.4175, -0.6465, -0.3494,  0.8262,  1.9479, -0.8603,
          1.9942, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.3310, -7.5002]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.8872,  1.6030, -0.2512, -0.0461, -0.2162, -1.3270, -1.4559,  0.4422,
         -0.3331, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2330, -6.3331]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.0774, -1.4940, -0.3995, -0.6595, -0.1908,  0.9055, -0.8091,  1.0639,
          3.2974, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.0944, -9.3644]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7688, -1.1035, -0.4012, -0.6553, -0.8001,  0.9208, -0.2472,  0.4803,
          0.7838, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.4068, -5.5418]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9053, -0.4764,  0.3015,  0.5437, -0.1638, -2.4952, -1.3251,  0.0284,
          0.5051,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0766, -7.1734]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6183,  0.9930, -0.4127, -0.5948,  1.0402,  0.2151, -0.0320, -1.1534,
         -0.0681, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.6700, -5.8043]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9195, -1.2888, -0.4039, -0.6408, -0.8480,  0.8295,  0.3177, -0.3197,
          0.7402, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5916,  7.6358]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6982,  0.2187, -0.4186, -0.6432, -0.5018,  0.4572,  1.5591,  0.6866,
          0.3752, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0438, -7.1587]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6930,  0.0488, -0.2517,  0.2289,  0.5078, -0.3732, -0.2407,  1.5805,
         -0.8611, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.3996,  6.4937]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3497,  1.3210, -0.4106, -0.5579,  2.3871, -0.0374, -0.0266,  0.5976,
          0.5251, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.8942, -8.0752]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9663, -0.1346,  0.0450,  0.0253, -0.4050, -0.7737, -1.5930,  0.4218,
         -0.6156, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9556,  8.0620]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6444,  0.7361, -0.3897, -0.4924,  0.5217, -0.2159, -0.3796,  0.3188,
         -0.6325, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.8640, -5.9692]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9274, -0.2337, -0.0109,  0.2339,  0.9536, -0.1089,  0.5673, -0.7300,
         -0.6613, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8866,  6.9830]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3381,  0.8037, -0.1343,  0.3812, -0.5173,  0.0285, -0.6978,  0.3785,
         -0.6922, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5465,  8.6648]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5731,  1.1253, -0.3758, -0.3648, -0.3304,  0.2169,  0.5540, -0.3572,
         -0.2821, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1735, -6.2528]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0167,  1.5528,  0.0341,  0.0582, -0.7705,  0.5191,  0.0908, -1.6566,
         -0.1579, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7852, -7.9077]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3633,  0.6111, -0.4010, -0.4272, -0.7963,  0.3573,  1.2429,  1.7614,
         -0.4707, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7697,  5.8581]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5938, -0.8499,  1.3758,  1.6326, -0.4376, -2.5879, -0.1191, -0.6296,
         -0.1647,  0.4086]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.9444,  9.1595]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8938,  0.2903, -0.2271, -0.0989,  0.3881, -1.3013, -2.3435,  1.5316,
         -0.5109,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.8634, -5.9562]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0563, -0.2174,  0.4022,  0.9488, -0.0938, -1.7854, -2.0805, -0.0723,
          0.3460,  0.4086]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.7040,  9.8431]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.1178,  0.0861, -0.4006, -0.5915, -0.8445,  0.2347,  0.8862,  0.4963,
          0.1114, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7244,  5.7852]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.6712, -0.8753,  2.4957,  1.8505,  0.2550, -3.0370, -1.3967,  0.1030,
         -0.2171,  2.1426]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-13.8702,  14.2672]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9303,  0.9878, -0.1802,  0.2863,  0.3007, -1.7033, -2.1977,  1.3299,
         -0.8652, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3073, -6.3965]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.3884, -1.3244, -0.4015, -0.5308, -0.8537,  0.7770, -0.1775,  0.8452,
          1.6134, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.8960, -8.0694]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1703,  0.2597, -0.2756, -0.0540,  3.7421, -0.8993, -0.7167, -0.1590,
         -0.1453, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.2391, -7.4052]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7017, -1.3743, -0.4124, -0.6580,  4.7586,  0.6967, -0.4267,  0.3821,
          2.6492, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.4597, -8.7948]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0477, -1.5045, -0.3956, -0.6463, -0.1415,  0.7523, -0.4453,  0.9465,
         -1.1271, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.8508,  8.9674]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3760, -1.0337, -0.3993, -0.6005, -0.8474,  0.6264,  0.2816, -1.0662,
          0.1967, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.5545,  6.5936]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.9929, -0.0658, -0.4263, -0.6228,  0.0177,  0.7282,  1.5825, -2.0488,
          2.0993, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.8430,  5.8726]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2371,  0.5407, -0.3863, -0.4714,  0.5419, -1.0819, -0.2249,  1.0268,
          0.0184, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.2384, -5.3058]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4863,  1.3224, -0.1596,  0.4131,  0.2758,  0.0679,  0.0976,  1.1632,
         -0.6631, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.1752,  9.3040]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1764,  0.7704,  0.1205,  0.4794,  0.1611,  0.2364, -1.6234,  0.3603,
         -0.9199,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6930,  7.8163]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5370, -1.0252, -0.4024, -0.6534, -0.9328,  0.7600,  0.1293,  0.8951,
          0.8285, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1467,  6.1458]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0465, -0.2258, -0.4110, -0.5163, -0.8156,  0.7936,  1.4731,  0.0048,
          1.7243, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1566,  6.1716]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9393, -0.7583, -0.4103, -0.5971, -0.5499,  0.8213,  0.6133, -1.0015,
          0.8149, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.8348, -4.9533]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5525, -0.3128, -0.3874, -0.4624, -0.8250,  0.6317,  1.2653,  0.9573,
         -0.8838, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1321, -8.2379]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.1734, -1.3947, -0.4081, -0.6599,  6.9845,  0.8150,  0.5292,  1.0641,
          2.7111, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 11.7278, -12.1008]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1334, -1.0794, -0.1889,  0.2991, -0.5386,  0.3259,  0.2837, -0.1481,
         -0.3613, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9667,  6.0328]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4839,  0.1306, -0.4090, -0.6103,  0.9010,  0.7351,  0.3657, -0.6140,
         -0.2262, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.8665, -7.0245]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5585, -1.1634, -0.4041, -0.6440, -0.1213,  0.6662,  1.2378,  0.9180,
         -1.2736, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9018, -9.0273]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5141,  0.8869,  0.0024,  0.3674, -0.0599,  0.3606, -0.2216, -1.0015,
         -1.0526, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7014, -6.7993]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B257.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B47LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M4LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M23LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B315.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B235.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B40RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B277.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B240.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M188.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B83LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B181.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B324.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B62LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B292.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B11RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B174.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M246.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B60LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M309.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B13RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M205.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B185.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M124.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M334.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B118LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B28LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M206.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M3LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B13RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M78LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M170.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M69LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B64RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B12RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B256.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B68RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M175.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M181.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M233.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B58LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M40LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M100RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M39RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M7LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B183.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B96RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B182.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M12LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B29RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B73RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B208.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B90RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B24RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-1.0169, -0.7745,  1.3007,  2.3311, -0.5640, -2.4921,  0.3101,  1.1548,
         -0.7957,  0.3419]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.2978, -5.2575]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0769,  0.8973, -0.3778, -0.5161, -0.7196,  0.7180,  1.9374, -0.1340,
          0.6999, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3820, -8.5280]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6083,  0.1147, -0.3059, -0.2029,  0.0316,  0.3842,  0.6987,  0.4230,
         -0.8444, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.0213,  9.1477]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4955,  0.2616,  0.4460,  1.0162, -0.2551, -0.4525, -1.3355,  0.1888,
         -0.9508,  0.4753]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.7337,  10.9369]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4228,  0.5118,  2.7792,  4.0537, -0.8335,  0.4799,  0.9807, -1.2516,
         -1.2439, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5132,  8.7493]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7807, -0.9487,  1.2600,  1.3808, -0.5834, -2.6743, -0.2044,  0.5624,
         -0.5841,  0.8754]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.7416, 10.0114]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.8388, -0.3941, -0.4077, -0.6573, -0.7948,  0.8281,  0.8262,  0.2019,
          4.6994, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5152,  5.4505]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1224, -1.4627, -0.3993, -0.6403, -0.4637,  0.8493, -0.4406, -0.0479,
         -0.8122, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.2939,  7.3635]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.3121, -1.3556, -0.4029, -0.6579, -0.6460,  0.8246,  1.1909,  0.8272,
         -0.2413, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5356,  8.6455]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8969, -0.6922, -0.4019, -0.6403, -0.7234,  0.8672,  0.5413, -0.3204,
          0.7591, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.7993,  6.8380]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6706,  0.3440, -0.4246, -0.6400, -0.5833, -0.0291,  0.1605,  1.3856,
         -0.4941, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7377, -5.8320]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0385,  0.2515, -0.3052, -0.3590,  0.2104, -0.3180, -0.7170,  0.0361,
         -0.7413, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3179,  7.4012]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7705,  0.9448, -0.4066, -0.3731,  2.0923, -0.1291, -0.7791,  1.2328,
         -0.0978, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.6335, -5.7872]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3492, -1.3236, -0.3958, -0.5243,  0.9408,  0.6784,  0.0531,  0.7654,
         -0.8449, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1150,  6.1803]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1829, -0.4798, -0.4034, -0.6184, -0.7120,  0.8115,  0.4827,  0.8345,
         -0.2417, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.5904, -9.7526]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4580,  1.0539, -0.4417, -0.6363,  0.0826, -0.0487, -1.1104,  0.8223,
          1.4703, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9150,  5.8886]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.7335, -1.0016, -0.3876, -0.1528,  0.4069,  0.5451,  0.4112,  0.3957,
         -0.7405, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.6231, -6.7167]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5341,  0.5871, -0.1620, -0.0088, -0.4616, -0.8285, -1.9552,  0.5113,
         -0.8512, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.2551,  10.4046]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.2740,  0.7702, -0.3155, -0.3403, -0.5578,  0.8816,  0.9484, -2.4263,
          0.5985, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5163,  7.5736]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7303, -1.1726, -0.3800, -0.2069, -0.6720,  0.6020,  0.3598, -0.6119,
          0.2622, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.6658, -9.8644]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.2753, -1.4595, -0.4038, -0.6656,  9.1543,  0.4074,  1.4160,  0.4000,
         -0.0539, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.8212,  4.7135]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.6742, -0.1280, -0.3702, -0.3515, -0.8740,  0.8643, -0.1796, -1.2167,
          0.7713, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.9958,  5.0136]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0376,  0.1886, -0.3859, -0.5438, -0.2924,  0.3978,  0.5805, -1.1776,
          0.1883, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.3144,  5.3381]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.1747,  0.6738, -0.3959, -0.4043, -0.5230,  0.7023, -0.0782, -0.6640,
          1.5511, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.4786, -6.6148]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.6218, -1.5008, -0.4050, -0.6839,  2.7953,  0.8431,  1.2144, -1.4741,
          0.7702, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.8069, -10.0279]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.8152,  0.9442, -0.3765, -0.4853, -0.2993,  0.8082,  0.4817, -1.3640,
          0.3228, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6301,  6.6841]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1301,  0.3489, -0.4160, -0.6219, -0.7648,  0.7814,  1.3626,  2.0282,
          0.9489, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.0035, -5.1054]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6200, -0.9656, -0.3758, -0.1040, -0.7522,  0.4228, -0.1795,  3.1837,
         -1.0423, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9219, -6.0061]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2033, -1.2994, -0.4044, -0.6572, -0.1367,  0.8291,  1.0463,  0.3026,
          0.8137, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5652,  7.5993]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6636, -1.1883, -0.4091, -0.6071, -0.5908,  0.4635,  0.1505, -0.5553,
          0.1904, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9206, -6.0744]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6222,  0.6625, -0.4266, -0.6212, -0.2186, -0.4535, -1.5675,  0.1811,
          0.1179, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7070, -5.8422]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0161,  1.3506, -0.2564, -0.3377, -0.4506, -0.3642, -1.3889,  0.6983,
         -0.7752, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1873, -7.2930]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0701,  0.6558,  0.8603,  1.0235, -0.2039,  0.1941, -0.7804, -0.1088,
         -0.8965, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.3947,  5.5101]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2510, -1.2358, -0.4052, -0.6317, -0.7953,  0.8952,  0.0919, -1.1961,
          1.5496, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6169,  6.6188]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9692, -0.1233,  0.0595,  0.4887,  0.6045, -0.6700, -1.3605,  1.3106,
         -0.5129, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.0890,  9.2014]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1373,  0.2653,  0.2376, -0.1912, -0.0538, -1.4977, -3.1173, -0.6811,
         -0.2675, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6501,  7.7276]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0748, -1.1281, -0.3804, -0.4971, -0.9109,  0.9233,  0.7792, -2.0853,
          0.2246, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1987, -8.3553]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9557,  1.0085, -0.2814, -0.3046,  0.7751, -0.3467, -1.8734,  0.2641,
          0.7498, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8996,  6.8920]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0992,  1.0080,  0.0815,  0.2421,  0.3686, -1.5358, -1.1759,  0.5077,
          0.3825, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0185, -7.1463]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7513, -0.6350, -0.3497, -0.2647,  0.2286,  0.7514,  1.4372, -0.2783,
         -0.7617, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.1020,  7.1726]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M115LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M200.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M75RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M71LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M272.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M63LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M166.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M41RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B79LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M25LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B285.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M55RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B61LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M67RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B155.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M91LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M53LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B323.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M216.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M203.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M240.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B166.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B135.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M301.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B76LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B307.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M261.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B238.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B218.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B253.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M46LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M183.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M100RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M117RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B92RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M64LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B20RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M115LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B164.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M228.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M30RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B2LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B206.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M294.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M191.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M104LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M160.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M75LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B159.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B63LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B107LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B121.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M56LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M265.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.3187, -0.7903, -0.3120,  0.0569, -0.8845,  0.3017,  0.0265,  0.8826,
         -1.5827, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.3193, -9.4671]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 4.9614, -0.5617, -0.4243, -0.6631,  0.6531,  0.9756,  1.7256, -2.4061,
          4.3653, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.4834,  5.4329]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3387,  0.9325, -0.2935, -0.3969,  1.2396, -0.3080, -1.7245, -0.4411,
          0.7000, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4114,  7.4186]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5135,  1.3623, -0.3249, -0.3723, -0.2171, -0.5270, -1.2808, -0.7811,
          1.6166, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9539, -8.1470]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1440, -0.9288, -0.4175, -0.6633,  3.8846,  0.5754,  1.5972, -1.2435,
          2.5802, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4902, -7.7835]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5951, -0.3138, -0.3134, -0.2000,  0.0100,  0.0486, -0.2240,  0.4243,
         -0.8616, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.4849,  9.6083]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6159, -0.6434, -0.4094, -0.6488, -0.4727,  0.2625,  1.1088,  1.8111,
          1.3229, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1291,  6.1359]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9449,  0.7935, -0.3831, -0.3993, -0.3552, -0.0719,  0.1357,  1.2771,
         -1.1271, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.7082,  9.8502]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1341, -0.8352, -0.1565, -0.2388, -0.5274, -0.4701, -0.0771,  1.1204,
         -0.8897, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.0385,  8.1568]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3698,  1.5501, -0.3082, -0.3785, -0.7811, -0.2498, -0.2267, -0.3271,
         -0.2075, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.4878,  8.5803]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9559, -0.0144, -0.3426, -0.3721,  2.8345, -1.2377, -1.0028,  0.4434,
          0.0898,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0550, -6.1914]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9493,  1.1967, -0.3576, -0.3977,  2.1251, -0.1856, -0.7549, -1.0284,
          0.6106, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5601, -6.7277]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3836,  0.3431, -0.4153, -0.5288,  0.5013, -0.0533,  0.4206, -0.2357,
         -0.3734, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.6325, -6.7511]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.1453, -0.3869, -0.3213, -0.3614,  1.2090, -0.4668, -0.6034,  0.6935,
         -0.2276, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0418, -6.1644]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0416,  1.6113, -0.4077, -0.5954,  0.4131,  0.1622,  0.1576,  1.0011,
         -0.2841, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7402,  5.7716]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7119, -0.1113, -0.4061, -0.5009,  1.7901,  0.6139,  0.2750,  0.4850,
          1.0754, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1194,  6.1012]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6430, -0.3918, -0.1408,  1.4774, -0.5165,  0.4448,  0.4624,  3.0763,
         -1.3827, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1819, -7.2535]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6467, -1.1776, -0.4025, -0.6422, -0.7099,  0.7630,  0.3498,  1.2648,
          1.0298, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7587, -7.9335]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3419, -0.2755, -0.0104, -0.0102, -0.5521, -0.4764, -0.3700,  1.1115,
         -1.3857, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.8950, -5.9272]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9869,  1.2108, -0.4048, -0.5470,  1.8678, -0.7202, -1.0545, -0.1093,
          0.1616, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9145, -6.0962]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.4725, -0.9830, -0.3502, -0.2657,  0.4101,  0.6860,  0.2081, -0.2770,
         -0.8323, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.8255,  4.8617]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.2575,  0.5443, -0.4354, -0.6521,  0.8307, -0.0948, -0.0723,  1.1708,
          0.5497, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3304, -8.5173]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2968,  0.9453, -0.4169, -0.6244,  0.6018,  0.2413,  0.4652,  0.5007,
          0.7181, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.1454, -10.3572]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9686,  0.6819, -0.1847,  0.6512, -0.5747,  0.5938,  0.6594,  0.0096,
         -1.0232, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5587,  5.6256]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.8366, -0.5176, -0.4071, -0.6583, -0.0328,  0.6747,  0.5743,  0.7449,
         -0.4220, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1710,  8.2720]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9755,  0.5408,  0.3594,  0.6167, -0.3560, -0.2667, -1.4651,  0.2427,
         -0.5999,  0.0751]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.8833, -5.9462]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1616, -0.8673, -0.4043, -0.6106, -0.7950,  0.5311,  0.6544, -0.0578,
          0.1052, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4357,  7.5034]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0916, -0.2046, -0.3474, -0.3401, -0.5739,  0.2970, -0.2233,  0.7012,
         -0.8702, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.9532,  5.0176]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.6127, -1.1625, -0.3994, -0.6654,  1.6197,  0.7308,  0.3623, -0.9582,
          0.4066, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3680, -6.5425]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9430, -1.4787,  1.1582,  1.9424, -0.1577, -2.4993,  0.2971,  1.0274,
         -0.6823,  0.4753]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.7358,  8.9636]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3413,  0.8574, -0.3564, -0.4692,  0.0504,  0.3881,  0.7218, -1.3745,
          0.6474, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3462, -8.5259]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.6792, -0.6955, -0.4035, -0.6519, -0.8458,  0.7455,  0.7106, -0.0791,
          1.9944, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.6550,  5.6644]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3585,  0.3679, -0.3376, -0.2484,  1.7774,  0.3737,  0.3128,  0.4806,
         -1.0771, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5684,  7.6606]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1570,  0.2246, -0.4029, -0.6062,  1.1269,  0.5664, -0.1297,  0.2896,
         -0.3170, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.6121, -4.7371]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7893,  1.4111, -0.3793, -0.4187,  1.0204,  0.3570,  0.8186, -0.1956,
         -0.4713, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.5848, -5.6684]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8495, -0.3892, -0.3676, -0.3386, -0.4200,  0.3739,  0.0346,  1.1889,
         -1.0589, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.2784,  9.4056]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0212,  0.6801,  0.3778,  1.5795, -0.4391,  0.3530, -0.7537, -0.1678,
         -0.3790,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.2732,  7.3823]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.3785, -1.4489, -0.3995, -0.6787,  1.0442,  0.9746,  0.7137, -2.3153,
          3.3168, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 13.0622, -13.4034]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9336,  0.7588,  0.2259,  0.9104,  0.2063,  0.1888, -1.5224,  1.3404,
         -0.7333,  0.2085]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.6752,  9.8142]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6384,  0.0490, -0.4188, -0.6438, -0.6261,  0.3230,  0.7874,  0.6855,
          0.3405, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.8834, -8.0100]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.2620, -1.1510, -0.4017, -0.6494, -0.7257,  0.9132, -0.3335,  0.8868,
         -0.6853, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.1044,  7.1781]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6745,  0.1380, -0.2354, -0.2403, -0.8343,  0.6594,  0.6245,  0.5126,
         -0.9912, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.9452,  5.0287]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0068,  0.7201, -0.2176,  0.4802, -0.6696,  0.3602, -0.5431,  1.6315,
         -0.7425, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5546,  5.6575]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6852,  1.1380,  0.2295,  1.1967, -0.1613,  0.5084, -0.5937,  0.7716,
         -0.6815, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.3263,  10.4645]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1841, -1.4228, -0.3996, -0.6395, -0.5313,  0.4779,  0.8455, -1.1850,
          0.8415, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7524,  5.7699]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5716, -1.3227, -0.3992, -0.6696, -0.6744,  0.5629,  1.4766,  0.2547,
          2.0260, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4186,  7.4628]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8688,  0.9652, -0.4161, -0.5290,  2.4675,  0.4973,  1.1739,  0.6238,
         -0.7850, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6298, -7.7585]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8928, -0.2697,  0.0830,  0.9595,  3.0167, -2.8674,  0.5578,  0.4575,
         -0.0894,  0.5420]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.0715,  5.1496]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4439,  0.4485,  2.1517,  2.1798, -0.6876, -0.7343, -0.5625, -0.8218,
         -0.8343,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.4493,  10.7053]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6048, -1.2109,  1.1955,  1.4993, -0.6533, -2.7379, -1.4485,  0.0492,
         -0.3168,  0.4753]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.9057,  11.1412]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6483, -1.2462, -0.3986, -0.6749, -0.2369,  0.8215,  1.2210, -0.4439,
          0.8562, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6789, -7.8322]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0383,  0.6207, -0.4206, -0.6035,  1.6072, -0.2012, -0.5665,  0.5535,
          0.7649, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.1019, -9.3231]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8604,  0.7339,  0.2229,  0.9057,  0.5055, -0.0282, -1.4534,  1.3424,
         -0.7139,  0.0751]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.5344,  9.6630]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7420,  1.4875, -0.4132, -0.5880,  0.2337, -0.0843, -0.2214,  0.1360,
         -0.4544, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.9658, -5.0639]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3480,  0.9004, -0.3912, -0.4924, -0.3426,  0.4474,  1.1801,  0.1122,
          0.0434, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9352,  7.0192]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9585,  0.9679, -0.4032, -0.5060, -0.5966, -0.2063,  0.0061,  0.9805,
         -0.8073, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.9608,  9.0785]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.1124, -0.2788, -0.4146, -0.5865,  1.0751,  0.2890,  0.2919,  0.9468,
          0.2745, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7519, -5.9122]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2329,  1.1432,  0.0598,  0.5586, -0.5675, -0.3500, -0.6003, -0.1304,
          0.2174,  0.4086]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.9108,  9.0490]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0520, -0.4372, -0.3948, -0.5670,  0.6081,  0.4247, -0.1027, -0.5773,
         -0.2284, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.0736, -8.2242]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9490, -0.0347, -0.1546, -0.1500, -0.1181, -1.0989, -0.3969,  0.4196,
         -0.0674,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1401,  8.2676]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B133.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B194.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B140.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B246.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M253.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B215.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B202.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M141.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M204.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B70LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M286.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M319.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B173.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M107RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B42LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M229.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M103LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B106RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B116LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M120LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M167.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B23LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M102LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B237.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M63LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M24LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M326.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M106RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M225.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M173.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B6LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M95RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M338.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M94RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B258.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B311.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M333.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B217.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M13RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M259.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B211.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M169.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B197.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M76LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B84RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M302.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B108LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B167.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B198.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B1RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M14LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M73RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M2LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M60LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.8947, -0.6813, -0.3736, -0.4816, -0.8615,  0.7960,  0.6317, -1.2211,
         -0.5649, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.8334, -8.9763]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.1653,  0.6248, -0.1353, -0.2440, -0.2515,  0.3487, -0.5279, -1.5929,
          0.4113, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9229,  6.9868]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0535,  0.3281, -0.4078, -0.5889, -0.3126,  0.4989,  0.9075, -1.2789,
         -0.0725, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.2520, -8.3909]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1959, -0.7642, -0.4002, -0.5470, -0.7553,  0.7243,  1.4510, -1.2050,
         -0.5368, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4852, -7.5979]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7144, -1.4563, -0.3976, -0.6596,  2.0720,  0.7627,  0.1930,  1.2719,
          0.0346, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.0890, -9.2974]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9677,  0.6500, -0.3429, -0.3747,  3.4267, -1.1448, -0.1551,  0.4437,
          0.0841, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.3296, -5.4782]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4448, -1.6324, -0.3972, -0.6498, -0.5614,  0.6775, -1.1974,  0.3847,
         -0.6049, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7957,  7.8481]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0228,  2.1318, -0.0073,  0.4753,  2.8874, -0.7539,  0.2173, -1.8622,
         -0.1079, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3443,  7.3882]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7591,  0.1609, -0.3854, -0.4925, -0.2449,  0.4083,  1.0164,  1.7821,
         -0.1645, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.5434,  6.6189]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.1130e-03,  1.0863e+00, -2.6755e-01, -2.8580e-01, -6.3330e-01,
          4.2117e-01,  1.2068e+00, -1.1446e+00,  7.9992e-01, -7.2523e-01]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.8854,  5.9375]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.6625, -0.7375, -0.3768, -0.2233, -0.8052,  0.8868,  0.0638, -1.4425,
         -1.1953, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.6780, -8.8090]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8664, -0.9109, -0.3615, -0.3250, -0.7712,  0.3665, -0.5193,  0.9086,
         -0.3717, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.0877, -8.2568]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9577,  1.0129, -0.4223, -0.6345,  0.7655,  0.6317,  0.9725,  0.1659,
          1.2054, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.2716,  6.2723]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7466,  1.9069, -0.2361,  0.0280, -0.3694, -0.3390, -0.9430,  1.3679,
         -1.3202, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.6433,  9.8092]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7052, -1.2992, -0.4003, -0.6475,  0.8134,  0.5517,  0.0911,  0.3498,
         -0.5014, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.2205, -7.3648]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5104,  0.7225, -0.2353, -0.2836, -0.2297, -0.6192, -2.2069,  0.0710,
         -0.1736, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6884,  8.7657]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4363,  0.7341, -0.3456, -0.4395, -0.7301,  0.3444, -0.7760,  0.8148,
         -1.2879, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.2451,  5.3038]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1863, -1.6134, -0.3920, -0.6749, -0.6809,  0.6923, -1.4236, -1.0668,
         -0.3500, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.5864, -9.8049]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 4.2665,  0.1723, -0.2341, -0.2585, -0.7416,  0.7689,  1.3130, -2.3477,
          0.0276, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9324,  7.0581]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9129, -1.2243,  3.0783,  2.7094, -0.2722, -2.5224, -0.9210,  1.0636,
         -1.2776,  1.4090]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-13.9751,  14.4163]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
extra feats tensor([[-0.9612,  0.4544, -0.2549, -0.0591, -0.2058, -1.3347, -0.3330,  0.7639,
         -0.5634,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.7500, -8.8468]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0838, -1.5305, -0.4019, -0.6572,  0.7895,  0.7812,  0.5574, -0.0662,
         -0.3967, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.4125, -9.5941]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0200, -0.0715, -0.2491, -0.3105, -0.6473, -0.3973, -0.4278,  0.2964,
          0.1618, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3650,  8.4529]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1633, -0.9169, -0.3989, -0.6159, -0.6072,  0.5949,  0.0022, -0.7562,
          0.5879, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9236, -9.1320]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7434,  0.4673, -0.2702, -0.1416, -0.4204,  0.1687,  0.3445,  0.3516,
         -0.8783, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.0393, -5.1154]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9968,  1.1402, -0.2755, -0.2843, -0.2459,  0.3106, -0.2469,  1.5330,
         -0.1058, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.2972,  8.3849]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2345, -0.5490, -0.3991, -0.5541, -0.6095,  0.8716,  0.1887, -0.3590,
          0.1769, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.4729, -6.6088]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1073,  1.5199, -0.4061, -0.5681, -0.7442,  0.7150,  1.9141,  0.6303,
          0.5662, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.2519,  7.3443]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6573,  0.2165, -0.3009, -0.5247,  3.2531, -1.3426, -0.5142,  0.2702,
          0.5075, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6254, -7.8105]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7349,  0.0419,  1.4131,  2.2400, -0.2719,  0.1560, -0.1359, -1.1824,
         -1.3485,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6495,  8.8358]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6068, -1.6350, -0.3929, -0.6661,  0.0061,  0.6944, -1.2184,  0.3103,
          0.2321, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7465, -5.9152]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-3.5406e-01, -6.4798e-04,  9.8256e-01,  1.0159e+00, -6.4317e-01,
         -8.9710e-01, -1.0776e+00, -2.0900e-01, -6.6360e-01,  7.5109e-02]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.4449,  10.6655]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0785, -0.5737, -0.4087, -0.5133,  0.2812,  0.4455,  1.4625,  0.5446,
          0.6546, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.3422,  6.3967]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6787, -1.1982, -0.4080, -0.6488, -0.7137,  0.5157,  0.4297,  1.8077,
          1.4973, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9029,  5.8923]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8627, -0.5931, -0.4087, -0.5892, -0.5547,  0.4566,  0.4294, -1.2810,
         -0.0208, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.0742, -5.1747]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6989,  0.4152, -0.4248, -0.6418,  0.6528, -0.1586,  0.1714,  1.3905,
         -0.5205, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1795, -6.3070]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4806, -0.7809, -0.3037, -0.2212, -0.4012,  0.4813,  0.9526,  0.0581,
         -0.5268, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.0603,  8.1590]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.5243, -1.3988, -0.4002, -0.6628,  1.9658,  0.6953,  0.2618,  1.1966,
          2.7609, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.0078, -9.2770]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7013, -0.6397, -0.4179, -0.5685, -0.5393,  0.7680,  0.2210,  1.2069,
          0.4118, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3745,  7.4323]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2672, -0.3240,  0.2977,  0.5144, -0.3465, -2.3920, -0.3735,  1.0473,
         -1.1816, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.1517,  9.3452]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor(1., device='cuda:3')
extra feats tensor([[ 0.2170, -0.5853, -0.4116, -0.6396, -0.4739,  0.6970,  1.0417,  1.0626,
          1.3302, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.2194,  8.2690]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9827, -0.5168,  2.0442,  3.3210, -0.7366,  0.2948,  0.3369,  0.7911,
         -1.7103, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.4997, -4.4789]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3773, -1.1845, -0.4144, -0.5413, -0.7700,  0.6193,  1.0300,  0.4803,
          0.4126, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1994,  6.2430]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5755, -1.6069, -0.4129, -0.6572,  7.2944,  0.9007,  1.6793, -0.6978,
          1.0441, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.8796, -9.1899]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.2403, -0.6713, -0.4056, -0.5757, -0.3675,  0.5577,  0.4492, -1.4669,
         -0.3044, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1163, -8.2696]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2213, -0.3384, -0.4169, -0.5909, -0.3781,  0.4617,  0.9284, -0.1044,
          1.1493, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.8808, -8.0391]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2021,  0.6364, -0.4178, -0.5910,  0.0302,  0.2727,  0.5249, -0.1021,
          1.2367, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7305, -6.8974]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0594,  0.2296, -0.4007, -0.5656,  0.3991,  0.2192, -1.2473,  0.9050,
          0.2674, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9468, -8.1336]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4522, -0.6102, -0.3644, -0.4277,  0.6938,  0.7540,  0.3166, -1.2297,
         -0.2324, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0043, -7.1733]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.6165, -1.4370, -0.3981, -0.6066, -0.8092,  0.8837, -0.4074, -0.8274,
         -0.4175, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3152,  7.3894]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4041, -0.1702, -0.4036, -0.6217,  1.1970,  0.7564,  0.4478, -1.1038,
          0.6412, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.9522, -10.1802]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8969,  0.8721, -0.2224, -0.0905,  0.1668, -1.6020, -1.8540,  1.5345,
         -0.4749, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.8518, -6.9607]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5744,  0.9352,  0.0593, -0.0787, -0.2833, -1.3687, -1.3459,  0.4266,
         -0.2722,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3716,  7.4965]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6041, -0.9322, -0.4048, -0.5975, -0.5915,  0.6501,  0.6007,  1.0421,
         -1.0456, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3513,  7.4442]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3946, -0.5201, -0.2995, -0.4687, -0.1902,  0.0970, -0.6941,  0.1290,
          0.7391, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.3029, -7.4792]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.1500, -0.9369, -0.3387, -0.3541, -0.5835,  0.8703,  1.2859, -2.3649,
         -0.5764, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.1444,  7.2413]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8559,  0.9615, -0.2191,  0.4802, -0.5136,  0.5380,  0.0486,  1.6309,
         -0.7520, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8548,  7.9861]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7830,  0.5384, -0.3893, -0.4412, -0.5851,  0.6824,  0.8512,  0.5956,
          0.1315, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5482,  8.6670]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3169, -1.3353, -0.3958, -0.6422, -0.7921,  0.7734, -1.1830,  0.4744,
         -0.1102, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.5515, -7.7134]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5565, -1.4825,  4.9237,  4.2734, -0.0308, -2.3115, -1.6379,  0.1481,
         -0.9167,  1.6091]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.2576,  11.7140]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B89LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B122.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M11RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M318.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B73RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M24LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M232.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B34LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M52LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M274.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B14LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B272.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M30RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B29RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B316.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M12LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B289.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M15RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B7RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M147.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B43LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M105LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M144.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M41RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B302.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B154.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M6RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B12RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M217.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M70RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M224.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B325.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M8LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B213.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B329.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B82RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B274.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B41RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B15LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M254.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B69LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B327.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M16LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M238.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B279.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M187.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M109LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M93RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B59RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M20RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M59LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M96RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B116LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M15RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
extra feats tensor([[-0.1632,  1.2628, -0.1383, -0.2409, -0.6444, -0.2713, -0.1894,  1.1186,
         -0.9066, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.4750,  8.6062]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7153,  0.4253,  0.4822,  0.2166,  0.3831,  0.8312, -0.2467, -1.8803,
         -0.2765, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.6546,  9.7758]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3927, -0.3647, -0.4069, -0.6353, -0.8196,  0.7511,  0.3414,  0.1007,
          0.4872, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.4306, -5.5542]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9882,  2.0057, -0.4223, -0.6234, -0.3853,  0.5304,  1.0687,  0.4137,
          0.1907, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.5819,  6.6416]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.2108,  0.1905,  0.2963,  0.4348, -0.5518, -0.7639, -0.1683, -1.2581,
         -0.2785, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.4938,  9.6535]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4151,  0.7381, -0.4081, -0.5898,  1.1286, -0.0370, -0.5093, -0.3797,
          0.0230, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.5154, -7.6812]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.1544, -1.1361, -0.4172, -0.6550, -0.5664,  0.8179,  1.0406, -1.1970,
          3.4920, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5114, -6.7499]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8558, -1.5200, -0.4007, -0.6452, -0.6546,  0.7712,  0.9455,  0.3843,
         -0.2344, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3002, -8.4290]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7229, -0.8182,  1.2613,  1.6417, -0.3434, -2.7185, -0.4705,  0.2130,
         -0.5209,  0.2752]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.0465,  10.2748]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4609, -0.8030,  7.0799,  2.9241, -0.6204, -2.3074, -1.1098, -0.8981,
         -1.3953,  0.9421]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-15.5372,  16.1729]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0250, -0.6051, -0.3593,  0.0659, -0.3422,  0.4999,  0.4348,  3.1316,
          0.1294, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1120, -8.2742]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7374, -0.1692, -0.4014, -0.4805,  0.3975,  0.8293, -0.0538,  0.9082,
          0.1359, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0669,  7.0964]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0880,  2.0001, -0.3303, -0.5075, -0.2570, -0.6465, -0.1302, -0.2156,
          0.8622, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.4705, -6.6195]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0363,  0.5434, -0.3978, -0.5273, -0.7972,  0.8431,  1.6739, -1.5789,
          0.7847, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1716,  6.2246]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1855,  0.8159, -0.2455, -0.2370, -0.3137,  0.3847, -0.6177, -1.0842,
          0.3811, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6113,  8.6990]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.1371,  0.9960, -0.3767, -0.3508,  1.6055, -0.5306, -0.4337,  1.4051,
         -0.3359, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3118, -8.4748]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8854, -0.0125, -0.2316,  0.0708,  0.4744,  0.0489,  0.5363, -0.5658,
          0.4315, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3786, -6.5206]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4497,  0.8868, -0.4091, -0.4745,  0.5063,  0.0780,  0.1426,  1.1502,
         -0.8374, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.1561, -5.2293]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2852, -1.5384, -0.3955, -0.6021, -0.5930,  0.6678, -0.7371, -0.5651,
         -1.2382, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3278,  8.4318]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4356,  0.6838,  0.9721,  3.1630, -0.6176, -0.3389, -0.0472,  0.2192,
         -1.2969, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.7177,  4.8183]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 3.7634, -0.5607, -0.4329, -0.6590,  2.8816,  1.7203,  2.0242, -3.2583,
          4.5762, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.3828, -10.7543]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5244, -0.0591, -0.3665, -0.4547, -0.4046,  0.2037, -0.4216, -0.3112,
         -0.4502, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9586, -7.0858]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9137,  0.7267, -0.3421, -0.4403,  3.2383,  0.2996, -0.6210, -1.8285,
          0.5492, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9963, -6.1884]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5111,  0.4508, -0.3024, -0.3138, -0.6301,  0.6505,  1.8045, -1.5009,
          0.2704, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5806,  8.6871]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.1404, -1.2884, -0.4029, -0.5717, -0.5433,  0.6374, -0.0322, -1.4650,
         -0.2368, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.3516, -7.4959]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0599, -0.2287, -0.4163, -0.6355,  0.5877,  0.4394, -0.0332, -0.4255,
         -0.3811, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.8921, -9.0731]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4013, -0.4274, -0.4079, -0.6589, -0.1845,  0.4939,  1.8088,  0.8153,
          0.9250, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7927, -7.9598]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9221, -0.1372,  0.2944,  1.2323,  0.2547, -0.9794, -0.5606,  1.2274,
         -0.6957,  0.0751]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9408,  8.0760]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0705, -0.2196, -0.3176, -0.3350, -0.2038, -0.3324, -0.1294,  0.4894,
         -0.4829, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9422,  8.0561]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9332,  0.6565,  0.1063, -0.0934, -0.5147, -0.3029,  0.2606,  0.1694,
         -0.5753, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8677,  6.9992]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6224, -1.1853, -0.4016, -0.3556,  0.3498,  0.5230, -0.4859,  0.9093,
         -1.2608, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8750,  7.9693]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8944, -0.7299, -0.2713,  1.3225, -0.3590,  0.4158, -0.1164,  3.1822,
         -1.0200, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0357, -7.1434]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9287, -0.3508, -0.3638, -0.3925, -0.6264,  0.7387,  0.2647, -0.8411,
          0.1568, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0274,  7.0895]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.1752,  0.7890, -0.4013, -0.5767,  0.9220, -0.1317, -1.5213, -0.8678,
          0.3639, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.5340,  6.5467]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7395, -0.6196, -0.4139, -0.6192,  0.7018,  0.4308,  0.0304,  1.3852,
         -0.7374, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.9043, -4.9992]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0050, -1.1700, -0.4008, -0.6589,  0.9488,  0.6021,  1.2856, -0.0774,
          1.4148, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.9104, -11.1801]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7518, -1.0273,  1.2698,  1.3756, -0.6375, -2.5765,  0.7310,  0.5631,
         -0.5822,  0.6754]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.7216,  11.0003]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.3140e+00, -8.9944e-01, -4.0965e-01, -6.5780e-01, -1.9701e-03,
          8.6825e-01,  2.0669e+00,  1.1627e+00,  4.3318e+00, -1.4589e+00]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 11.7555, -12.0615]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.3005,  0.3850, -0.4074, -0.6052, -0.1423,  0.5043,  0.6204,  0.2172,
         -0.3254, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3124, -6.4126]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.7155,  0.3019, -0.4077, -0.5660, -0.6007,  0.8739,  0.5882, -1.6273,
          1.0503, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1317,  8.2110]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M146.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B297.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B22LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B161.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M57LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M88RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B169.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M184.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B261.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M28RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M137.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B191.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B31RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B10LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M29LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M45RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B34RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B282.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B81RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M31RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B97RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B269.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B200.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M89RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M189.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M111LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M289.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B283.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M172.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M87LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B330.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B150.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M138.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B141.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B326.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M266.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B160.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M305.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M92LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M139.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M202.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B32LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M130.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B152.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B86LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B83LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M132.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M76LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B16RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B290.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M190.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M13RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M199.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M194.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor(1., device='cuda:3')
extra feats tensor([[ 1.2229, -1.0380, -0.4072, -0.6661, -0.8833,  0.7244,  1.0797, -1.8956,
          1.3938, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1079, -7.2898]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9841,  0.1265, -0.2517, -0.3085, -0.5371, -0.4533, -0.6622,  0.3004,
          0.1951, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8554,  7.9515]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.1320,  0.0061,  0.0743,  0.2932, -0.2158, -0.7270, -2.7024, -2.0955,
          0.0151, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4796,  7.5579]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9019,  0.4561,  0.0765, -0.0894, -0.6020, -0.3644, -0.5867,  0.1722,
         -0.5670, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6077,  8.7398]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4075, -0.6568, -0.2927, -0.3176,  0.4701,  0.4347,  0.6945, -0.1784,
         -0.0778, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.4707,  5.4885]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5337, -1.2425, -0.3979, -0.6453, -0.8567,  0.8090,  0.0439,  0.3824,
         -0.2646, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.8694, -7.0047]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7227,  0.5388, -0.3862, -0.4926, -0.3086,  0.2739,  0.1496,  1.7893,
         -0.1735, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9748,  8.0532]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0255, -0.6852, -0.4069, -0.6513, -0.7971,  0.8317,  1.0845,  2.0755,
          0.7808, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1783, -6.2876]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3371, -0.0270, -0.3513, -0.5004, -0.5456,  0.6428,  0.6637, -1.5395,
         -0.1017, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7719, -6.9092]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4089,  0.0616, -0.3984, -0.5514,  0.3404,  0.7433,  1.4303, -1.6019,
          2.1470, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.8536, -11.1156]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2474,  0.3289,  0.6136,  0.2709, -0.6667,  0.0114, -1.2752, -1.6324,
         -0.3971, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4617,  7.5894]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4960,  2.6535, -0.3774, -0.4707,  0.5256,  0.1007, -1.2151,  1.1193,
          0.5399, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4528,  7.4859]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5676,  0.1598, -0.4170, -0.6462, -0.0173,  0.8488,  0.9279, -0.8600,
          2.1392, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.3547, -5.5454]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.2400, -0.9012, -0.4050, -0.6437, -0.8357,  0.5754,  0.1598, -0.8779,
          1.4236, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.2512, -8.4382]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6752, -1.2492, -0.4100, -0.6892,  3.3258,  0.5376, -0.0500, -2.0177,
         -1.7242, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8672,  6.9261]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2890,  1.4961, -0.2115, -0.2196, -0.4909, -0.3911, -1.5953,  0.2217,
          0.8294, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8971,  7.9227]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0313,  0.6252, -0.2369,  0.1386, -0.0668, -0.2449, -1.1303,  0.5863,
         -0.3673, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.2634,  9.3753]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0237,  0.3670,  1.1035,  1.8768, -0.1918, -1.2497, -0.1033,  0.4714,
         -0.5660,  0.8754]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1111,  8.3201]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.4592, -1.2808, -0.4014, -0.6626,  0.8788,  0.7781,  0.5754,  0.4232,
         -0.1595, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9196, -7.0228]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.3560, -1.4342, -0.3927, -0.6736,  1.4908,  0.9016, -0.6159, -0.9445,
          1.3061, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.8765, -10.1463]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
extra feats tensor([[-0.0182,  1.4861, -0.1511, -0.2433, -0.6777,  0.7187, -0.5050, -1.4700,
          0.2209, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8551,  6.9173]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9117, -0.0483, -0.2086,  0.6281, -0.4747,  0.9545,  0.4227,  0.9904,
         -1.3161, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.6721, -5.7766]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.2372, -1.0907, -0.4187, -0.6582,  4.5172,  1.0347,  3.2153,  0.8003,
          3.1573, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.0134, -5.2221]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3263, -0.4485, -0.4062, -0.5698,  0.0397,  0.5018,  1.0843,  1.5293,
         -0.5242, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9663,  8.0791]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0275,  0.8519, -0.3350, -0.5024, -0.3081,  0.5694,  1.5457, -1.7550,
          0.9187, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4425, -7.5969]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2569,  1.2345, -0.2949, -0.3969,  1.1894, -0.4857, -1.1890, -0.4391,
          0.6443, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5739,  7.6139]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1152, -1.0567, -0.4019, -0.6598,  0.3555,  0.7714,  1.2231, -0.0728,
          3.4151, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.5471, -9.8377]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5620, -0.9925,  1.0251,  1.6919, -0.0919, -2.5673, -0.7319,  0.5315,
         -0.6972,  1.2089]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.3070,  5.5013]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.1541, -1.4376, -0.3220,  0.6934, -0.8576,  0.6172, -0.3703,  2.8612,
         -1.8869, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1515, -7.2397]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3180, -0.5034, -0.4048, -0.5704, -0.4334,  0.8177,  0.4505, -1.4641,
          0.5079, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.3006, -10.5290]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9313, -0.7920, -0.2759,  0.4871, -0.5981,  0.0949, -0.1622,  3.1943,
         -1.0654, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7076,  7.8284]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1638, -1.1355, -0.4015, -0.6207, -0.6225,  0.4268,  0.4333, -0.7565,
          0.5229, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.3590, -10.5789]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2758, -0.2804, -0.4044, -0.5661, -0.5052,  0.8834,  1.2383, -1.2670,
          1.3855, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6033,  7.6285]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7773, -0.4209,  0.5799,  1.1730,  0.0060,  0.1003, -1.9773,  0.4164,
         -0.5941,  0.2752]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.9608,  9.0951]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9258, -0.5966,  2.8105,  2.2848,  0.0310, -1.2932, -0.8772,  0.6046,
         -0.9808,  0.8088]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-13.7941,  14.1696]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1119,  0.0529,  0.1171,  0.4826,  0.3874, -0.0750, -1.5405,  0.3573,
         -0.9187,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.9929,  9.1342]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9962,  0.4396,  1.9322,  2.9240, -0.2333,  0.0923, -0.3790,  0.2556,
         -1.0409,  0.2085]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-12.9834,  13.2545]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6727,  0.1082, -0.4111, -0.3607,  0.2868,  0.6462,  0.2772,  1.2517,
          0.2618, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5615,  7.6264]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6125,  3.0375, -0.3805, -0.4016, -0.7726,  0.1944,  0.3521,  1.3576,
         -0.9714, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.6777,  9.8384]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3997,  0.5955, -0.4107, -0.5864,  1.1536, -0.8854, -2.0950, -0.8748,
          0.9154, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.4096, -5.6068]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.6898,  1.5742, -0.4134, -0.5600,  1.2874,  0.0087, -0.1541,  0.7946,
          0.3066, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.1683,  7.2104]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5168,  0.5777,  0.4437,  1.0161, -0.4905, -0.2937, -1.1076,  0.1846,
         -0.9294,  0.8088]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.8571,  11.0760]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5936, -1.3897, -0.3982, -0.5645, -0.2149,  0.6382, -0.1350,  0.3799,
         -0.9620, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.0969, -8.2390]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6260,  0.0644, -0.3685, -0.5709,  0.5479, -1.0645, -1.2895, -0.7966,
          0.7582, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.7174, -9.9385]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6005, -0.2521, -0.4110, -0.5902, -0.5288,  0.4119,  0.6253,  1.0318,
         -1.0672, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3509, -8.4621]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5915, -1.2979, -0.4021, -0.6583, -0.7129,  0.5756,  1.0443, -0.3482,
         -0.4397, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2846, -6.3941]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6067,  0.2263, -0.4108, -0.5283,  0.9039,  0.4240,  0.9591,  1.2910,
         -0.7199, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5057,  7.5825]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5350, -1.5027, -0.4070, -0.6582,  0.3172,  0.8439,  0.5714, -1.3135,
          2.6890, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.0350, -10.3182]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9191, -1.0325, -0.2547, -0.0528, -0.0662, -1.8296, -0.4359,  0.7648,
         -0.5658,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4929, -7.5793]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.9151, -1.7162, -0.3940, -0.5612, -0.6470,  0.7641, -0.8052, -0.2018,
         -0.7868, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.2728, -5.3775]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[14.6331,  1.5192, -0.4306, -0.6590,  0.4299,  5.3129, -5.3392, -3.2365,
          8.4036, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9258, -8.3409]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.2322, -1.2844, -0.4148, -0.6578,  5.3536,  0.7518,  4.1286, -0.1337,
          1.1827, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.6958, -8.9157]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0131,  0.4068, -0.4135, -0.5910,  1.1044, -0.9348, -1.3766,  1.1548,
          0.9908, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.0657, -5.2147]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5851,  0.7763, -0.4115, -0.6200,  0.4176,  0.8072,  1.2613, -1.7271,
          1.5130, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.5966, -7.7967]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0596, -0.9827, -0.3922, -0.5407,  0.0128,  0.4285,  0.7311,  1.2462,
         -1.0223, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9959, -7.1007]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6550, -0.4970,  1.2418,  1.6407, -0.3952, -2.7795,  0.1901,  0.2110,
         -0.5295,  0.4086]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.2171,  10.4752]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1303, -1.0534,  1.6774,  2.6091, -0.3127, -2.8112,  1.3715,  0.2273,
         -0.8687,  0.9421]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.7220,  4.9838]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4119,  0.9116, -0.3992, -0.5583, -0.6948,  0.5216,  1.3109, -1.1441,
          0.6812, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.5510, -7.7062]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4194,  0.1613,  2.1357,  2.1879, -0.6692, -0.8800, -1.5905, -0.8226,
         -0.7937, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.9112,  11.1563]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6666,  0.4419, -0.3770, -0.4619, -0.1443, -0.1524,  0.4421,  0.1907,
         -0.7912, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.2808,  8.3913]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B305.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B33LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M83RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B17LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B199.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M79LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B105RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M299.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B123.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M71LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B27RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B104RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M136.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B227.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M36RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M69LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M77RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M307.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M234.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M174.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M1RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B187.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M84RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M35LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B309.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B288.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B17LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B139.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M209.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B68RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B230.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B94RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B294.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B306.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B1RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B49RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B163.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M154.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M65LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B74LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M108RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M277.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B70LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M58RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B9RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M221.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M256.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B79LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B96RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B101LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B4RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B192.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M268.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B112LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.8524,  0.2385,  0.0638,  0.8247, -0.2899,  0.2225, -0.1311,  0.3197,
         -1.0476, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.2308, -5.2920]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0223,  0.1304,  0.7374,  2.3046, -0.2323,  0.5615,  0.5201,  3.1714,
         -1.2946, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.2661,  6.3984]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0930, -0.0846, -0.0042,  0.9556, -0.5252,  0.1484,  0.0486,  1.9799,
         -0.2117, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3208, -8.4586]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.8182, -1.1598, -0.4018, -0.6579,  2.8405,  0.7868,  0.2723,  1.0815,
          1.7009, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6947,  6.6783]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4800, -1.3708, -0.4152, -0.5395, -0.8505,  0.6284,  0.4027,  0.4817,
          0.4186, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0401,  7.0866]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.4784, -0.1589, -0.4156, -0.6425, -0.8176,  0.8934,  1.4819, -1.2230,
          0.9969, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5796, -6.7061]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6782, -1.0933, -0.3914, -0.4746, -0.4113,  0.5891,  0.2744, -0.0607,
          0.4473, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.8782, -10.0896]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5646,  0.7328,  0.0084,  0.5270,  3.2545, -2.0229,  0.5522,  0.2861,
         -0.2646,  0.2085]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9539, -8.0668]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.4529,  0.1787, -0.3931, -0.5095, -0.1927,  0.4709,  0.3010, -0.6021,
          0.0170, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.0744, -8.2026]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6814,  0.0553, -0.2668, -0.3556, -0.8879,  0.6621,  0.8093, -1.5901,
          0.8580, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.0073, -8.1670]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8459,  0.4521, -0.4143, -0.5882, -0.0554,  0.5143,  0.6698,  1.0343,
          0.6353, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.1221,  7.1813]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6152, -1.4471, -0.3971, -0.6589, -0.7525,  0.7437, -0.4109, -0.7299,
          0.4514, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.8164, -5.9563]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1201, -0.9259,  0.8480,  1.0408,  0.3760, -2.6616,  0.7162, -0.4256,
         -0.4162,  1.4090]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.0820,  4.2745]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2415, -1.3460, -0.3962, -0.6164,  1.3878,  0.6499, -0.6364, -0.0301,
         -0.1702, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9073, -9.1226]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4581, -1.6718, -0.4065, -0.6578,  6.8519,  0.5711,  1.7496,  1.5150,
          1.8529, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 12.6132, -12.9716]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7601,  0.0741, -0.1333, -0.1143, -0.2224, -2.5965, -0.2511,  0.7593,
         -0.8993,  0.3419]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.6716, -5.6795]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2076, -1.0090, -0.3731, -0.3389, -0.2406,  0.6018, -0.3165,  0.3202,
         -1.1122, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.4836,  6.5656]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6508, -0.0271, -0.2440, -0.1531, -0.5257, -0.8463, -0.2063,  0.4905,
          0.0117, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.8107,  8.9268]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8392,  0.2132, -0.3153,  0.1376,  0.3744,  0.3000, -0.1493,  1.2995,
         -0.5407, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.8864,  8.9846]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6396, -0.0415, -0.4005, -0.5608,  0.8553, -0.9224, -2.6657,  0.0937,
         -0.3344, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1734, -6.3314]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.7926,  0.6486, -0.0145,  0.8573, -0.6391,  0.4687,  0.3807,  0.1668,
         -0.7608, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.8177,  8.9505]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7488, -1.5697, -0.3937, -0.6711,  0.3126,  0.6833, -1.6066,  0.3515,
         -0.2620, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4158,  7.4666]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7051, -1.3830, -0.4014, -0.6382, -0.8514,  0.7289,  0.1716,  1.2316,
         -1.3518, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.4656, -8.5842]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4951, -0.6872, -0.4128, -0.6547, -0.8952,  0.4655,  0.7836,  0.8545,
         -0.7395, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3209,  8.4301]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.7490, -0.5901, -0.4147, -0.6611,  0.3862,  0.7488,  1.5985, -0.3590,
          3.8655, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.8181, -10.1016]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2665,  1.7032, -0.2131, -0.3504,  0.4798,  0.0302,  0.2445, -1.6557,
          0.9215, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.4835, -9.6729]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.4828, -0.3817, -0.3932, -0.5023, -0.7411,  0.7630,  0.5240, -1.2326,
          0.3098, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.3404,  5.3804]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-8.9853e-01,  1.8755e-01,  4.5012e-01,  6.0708e-01, -5.7017e-01,
         -1.9119e-01, -1.1895e+00, -4.2600e-04, -2.3399e-01, -5.2514e-01]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.0168,  9.1330]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9400, -0.7261, -0.2082,  0.6267, -0.0700,  0.9723,  0.1310,  0.9899,
         -1.2666, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.4278, -5.5534]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5065, -0.8363, -0.4040, -0.6360, -0.8361,  0.8400,  0.2375, -1.3483,
          1.6643, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.5912, -5.7587]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0497, -1.3597, -0.4100, -0.6023, -0.5198,  0.6156,  0.5247,  0.5738,
         -0.5538, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.9818,  5.0332]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6855, -0.1887,  0.5857,  1.1811, -0.1127, -0.6390, -1.5570,  0.4172,
         -0.6489,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.4922,  9.6484]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4107, -0.6657, -0.3980, -0.5788, -0.8837,  0.6023,  0.8751,  0.1937,
          0.5657, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.8854, -7.0273]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4516,  0.2295, -0.4128, -0.5728, -0.8831,  0.6485,  1.1279, -0.1077,
          1.6404, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.8494,  5.8486]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7868,  0.1423,  0.0283,  0.5285,  0.0447, -1.0439, -1.7954,  1.6887,
         -1.2936, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.9614,  11.1386]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.3326,  0.0893, -0.4079, -0.5776, -0.5598,  0.7909,  1.2803, -1.2530,
          0.9224, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.1243, -5.2447]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7000, -0.4248,  0.1600,  0.4743,  0.0561, -0.7598,  0.2493, -0.9682,
         -0.4478,  0.0751]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3275,  8.4809]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4086,  0.5770, -0.4247, -0.6330,  1.1945,  0.1709,  0.2191,  1.0080,
         -0.2634, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5341, -6.6761]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2461, -1.4958, -0.4027, -0.6731,  3.4292,  0.9158,  0.5915, -0.6087,
          1.5806, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.1208, -9.4185]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9952,  0.3910, -0.4061, -0.5981,  0.5974,  0.1874,  0.2372,  1.0018,
         -0.3478, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.1414,  5.1708]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
extra feats tensor([[ 0.9891, -1.3654, -0.3957, -0.5980, -0.2859,  0.8701, -0.7986, -0.6891,
         -0.8978, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7867,  7.8559]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6725,  1.3867, -0.0269,  0.0338,  0.1381, -0.4824, -0.8479,  0.1726,
          0.5411, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.2001, -7.3269]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4723, -0.4374, -0.3675, -0.4522, -0.5390,  0.2691,  1.0632, -0.3112,
         -0.4863, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.2011, -7.3287]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.6378, -0.8563, -0.4058, -0.6572, -0.8769,  0.8856,  0.2849,  0.2005,
          4.2438, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.5608,  6.5166]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8926,  0.1040, -0.3353, -0.3384, -0.4410,  0.1214,  0.4670,  1.8721,
         -0.6606, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.2941,  5.3842]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0454,  1.4064, -0.1356, -0.2437, -0.4466,  0.2871, -0.0388, -1.5931,
          0.3764, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.3208,  6.3833]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0209,  0.0442, -0.4074, -0.6513,  0.4608,  0.5238,  1.8537, -1.9324,
          2.1815, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.6370,  5.6039]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0977,  0.4155, -0.1947,  0.2960, -0.3404,  0.3154, -1.0747,  1.1801,
         -0.5675, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.2479,  6.3196]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8555, -0.9338, -0.4154, -0.6654,  2.4211,  0.4174,  0.3937, -2.1529,
          2.0962, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.4406, -10.7476]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6058,  0.2894, -0.4151, -0.6174, -0.5275,  0.5420, -0.5133,  0.9604,
          0.9317, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3794,  7.3923]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4271,  0.7016, -0.1761, -0.0959, -0.7142,  0.9108,  1.0792, -0.9471,
         -0.2179, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.7739,  6.8662]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7992,  1.6269, -0.3042, -0.3213, -0.0529,  0.3340,  0.0644, -0.0478,
         -0.5181, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.6116, -5.6987]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.2770,  0.1949, -0.3505, -0.2366, -0.4301,  0.6152,  1.1535, -0.9729,
         -0.2924, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.1425, -9.2633]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9140, -0.8469, -0.4018, -0.5904, -0.3867,  0.7304,  0.1027,  1.4364,
         -0.6612, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1112,  6.1601]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4359, -1.2761, -0.4023, -0.6581,  0.9017,  0.6919,  1.2232,  0.5063,
         -0.0141, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1905, -7.3356]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0079, -0.8526, -0.4148, -0.6367,  0.8820,  0.4626, -0.1454,  0.5708,
          0.7605, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6060,  7.6095]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1227,  0.3252,  0.5350,  3.0932, -0.7067,  0.3599,  0.0661, -1.2938,
         -1.1626, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9935,  8.1062]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5397, -1.6720, -0.3973, -0.6072, -0.3329,  0.7456, -0.6330,  0.3664,
         -0.8288, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4083, -7.5208]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.6326, -1.4609, -0.4044, -0.5306, -0.7151,  0.7363,  1.4831,  0.8479,
          1.6755, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3157, -8.4744]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6478, -0.9230,  1.3163,  1.6265, -0.6263, -2.6233, -0.6822, -0.2673,
         -0.0056,  1.0755]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.5896,  11.8717]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M49RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B34LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B222.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B90RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M82LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M195.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M227.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B78LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M158.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M22RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B264.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M50RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B131.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B2LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M86RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M131.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B308.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B146.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M267.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M177.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B24RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M9LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M99RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B42LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M97LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B93RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B300.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M123.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M37RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B111RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B74LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M33LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M2LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M34LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M231.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M223.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B244.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M235.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M10RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B119LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B98LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M110LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B234.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M118RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M149.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B30LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B156.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M57LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B53LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M193.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B248.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M321.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B204.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B245.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.1817,  0.3413, -0.2096, -0.1443, -0.8287,  0.4013,  1.0710, -1.5024,
         -0.6044, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6833, -7.7759]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8142, -1.2492, -0.4006, -0.4973,  0.8687,  0.6430,  0.1350, -0.6285,
         -0.8740, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9836,  7.0406]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5268, -1.3942, -0.3975, -0.6180,  0.8175,  0.8374, -0.4998, -0.2640,
          0.5437, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1629, -8.3803]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2768, -1.4918, -0.4048, -0.6312, -0.8335,  0.4564,  0.6881,  1.4408,
         -0.5622, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.7766,  8.8927]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.1000,  0.1064, -0.4181, -0.6552, -0.8569,  0.7202,  2.4218, -1.1975,
          3.6157, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.8330, -6.0270]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2538, -0.5750, -0.4066, -0.5688, -0.8526,  0.8086,  0.0827, -1.4636,
          0.4742, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.1731, -10.3948]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5772, -1.3328, -0.3730, -0.3118, -0.6496,  0.5341,  1.4731, -1.1886,
         -0.5758, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.8498,  5.9303]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7974,  0.1074, -0.2762, -0.2166, -0.0291, -0.1186, -0.8547,  0.8456,
         -0.4927, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.0118,  6.0734]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1045, -0.0286,  1.3297,  1.8264, -0.5762, -0.1992, -1.2870, -0.3641,
         -0.3425, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.7298,  8.9042]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1074, -0.3195,  1.0433,  2.1134, -0.3688, -2.0613, -0.5855,  0.2683,
         -0.8705,  0.6087]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.3395,  5.5169]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0447, -0.7391, -0.4076, -0.5308, -0.4206,  0.8313,  0.8716, -1.7540,
          0.9947, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4069, -7.5929]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0793, -0.8783, -0.3855, -0.5152, -0.5242,  0.8712,  1.0186, -0.5881,
         -0.3587, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9766,  8.0808]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3405,  0.9620, -0.3107, -0.3801, -0.6831, -0.4986, -0.1787, -0.3252,
         -0.2518, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5571,  5.6258]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8335,  0.1093, -0.3748, -0.4966, -0.7510,  0.7228,  0.9812, -0.3252,
         -0.7455, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.4996, -8.6346]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4926,  0.9035, -0.3484, -0.4291, -0.8202,  0.5845,  1.9846,  0.4440,
         -0.2062, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8380,  6.9679]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7906,  0.8796, -0.1786, -0.2605, -0.2486, -0.0574,  0.1025, -0.3944,
          0.0268, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.2061, -5.3097]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5464,  0.6514, -0.4048, -0.5773, -0.6878,  0.7805,  1.4396, -1.2748,
          1.5321, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1450, -6.2944]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2242,  0.6797, -0.2608, -0.4000, -0.5628,  0.4210,  0.2148, -0.5348,
          0.0094, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7127,  7.7995]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6716, -0.7347, -0.4045, -0.6084,  0.9705,  0.8687,  0.2731,  0.1082,
          0.8598, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.6140, -9.8514]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0531, -0.1001, -0.3001,  0.4702, -0.6190,  0.3745,  0.1379,  0.8136,
         -0.6433, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5018,  8.6194]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.0113, -0.0439, -0.4057, -0.5339, -0.2945,  0.8679,  1.5574, -1.7536,
          1.0214, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.3725, -5.5171]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4167, -0.1403, -0.0063, -0.0061, -0.5163, -0.2044, -0.1537,  1.1170,
         -1.3786, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5050, -6.5604]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2661,  0.5489, -0.1758, -0.2237, -0.2713,  0.0608,  0.3821, -1.3059,
          0.3081, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.6625,  5.7225]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2848, -0.7003, -0.4069, -0.6339,  0.2878,  0.8340,  0.1595, -0.4129,
          1.1375, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.6410, -8.8696]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2231,  1.0833, -0.2402, -0.2423, -0.0738,  0.4634, -0.0248, -1.0829,
          0.4625, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.4081,  6.4732]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4031, -1.1421, -0.4062, -0.6576,  3.4547,  0.6047,  1.6498, -0.3900,
          3.8848, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.7628, -10.1114]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9612, -0.6310,  0.6180,  1.6185, -0.5390, -1.4505, -0.6156,  0.6848,
         -0.2480,  1.2756]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.3600,  10.5947]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9600, -0.1418, -0.4232, -0.6250, -0.4956,  0.4252, -0.0122,  0.4166,
          0.3275, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5029,  5.5169]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4738,  0.3738, -0.4417, -0.6359, -0.1267, -0.1923, -1.6827,  0.8222,
          1.4946, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8097,  6.7729]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8817, -0.5808,  2.9456,  1.5754, -0.7154, -0.6246, -0.5433, -1.9676,
         -0.4781, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.9015,  12.2090]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2437, -0.9163, -0.4067, -0.5663,  0.9699,  0.7053, -0.1482,  0.1705,
         -0.3906, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.5826, -5.7201]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2064,  2.4293, -0.4154, -0.5301,  0.8094, -0.3611, -0.1690, -0.2365,
         -0.3665, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.3080, -4.3829]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2219,  0.1103, -0.4013, -0.5702, -0.3872,  0.6456,  0.5852, -0.9408,
          0.5598, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1889, -6.3252]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1008, -0.7776, -0.4017, -0.5938, -0.8213,  0.2279,  0.0464,  0.0428,
         -0.5820, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.3601,  6.4283]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8625,  1.0040, -0.2446, -0.0503, -0.2134, -1.2090, -1.6849,  0.4393,
         -0.3017,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1656, -7.2720]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9251,  0.2849, -0.3908, -0.4461, -0.2965,  0.4858,  0.0666,  1.1583,
         -0.5839, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6535,  8.7570]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5351, -0.0787,  1.8411,  2.7564, -0.7317, -0.2827, -0.6984,  0.0138,
         -0.5132,  0.4753]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.2242,  11.4744]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9557, -0.9745, -0.4032, -0.6300, -0.7970,  0.1564,  1.3546, -0.5649,
          1.1371, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.6653, -8.8364]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3616, -1.5062, -0.3953, -0.6605, -0.7571,  0.7356, -1.0012,  0.1071,
          1.6881, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3231, -8.5562]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9087, -1.5466,  3.1199,  2.7216, -0.2975, -2.4211, -0.9421,  1.0638,
         -1.2812,  1.6091]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.9555,  11.3502]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M324.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M17LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M75RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M134.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B259.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M48RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M287.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B145.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M9LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B28LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B115RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M275.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B134.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M270.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B50LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B58LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M5LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B195.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M5LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B291.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M119LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M180.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M297.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M113RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B284.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B254.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B84RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M295.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B109LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M162.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M125.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B219.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B46RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M66LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B224.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B7RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B75LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B18RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B94RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M46LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M21RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M283.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B6LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M165.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B214.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M335.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B328.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B103RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B220.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B26RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B107LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M65LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M60LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B196.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.5656, -0.9520, -0.4052, -0.6451, -0.1107,  0.5425, -0.1125,  0.9181,
         -1.2206, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9311, -7.0426]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5647,  0.0738, -0.1958, -0.1882,  2.6453, -1.8681, -0.7980, -0.1827,
         -0.3081, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9143, -8.0772]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.7675, -1.4437, -0.1444,  0.4213, -0.8880,  0.8709,  0.5000, -2.7399,
         -1.5822, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0259, -7.1282]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4704, -0.2966,  0.2064,  1.5936, -0.5819,  0.2407,  1.0064,  0.2737,
         -1.6766, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.1413, -5.1839]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3503, -0.2301, -0.3831, -0.3616, -0.5605,  0.4689,  0.7397,  1.6474,
         -1.1779, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7370, -6.8051]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9628,  0.4723,  3.6711,  2.8183, -0.7574,  0.0759, -0.4114, -0.5950,
         -0.8199, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.8348,  12.1552]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7559,  0.8223, -0.4056, -0.4912,  1.2027, -0.4035, -2.2230,  0.3373,
         -0.4871, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.2487,  7.2719]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9678,  0.7500, -0.2408,  0.0479,  0.0389, -0.5656, -0.9504,  0.6449,
         -0.3173, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.2276,  8.3248]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6491,  0.2323, -0.3493, -0.2669, -0.4243,  0.6585,  0.1653, -1.0294,
         -1.0675, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3578, -6.4227]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6308,  1.5614, -0.4257, -0.6404, -0.2295,  0.2096,  1.2191,  0.1143,
          0.0644, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1523,  8.2301]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4879,  1.2713, -0.0883,  0.6626, -0.6981,  0.5336,  0.2142, -0.6316,
         -0.4718, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.5494, -7.6595]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0550,  0.8416, -0.0643,  0.5581, -0.7420, -0.3237, -1.3267,  1.0162,
         -0.6105, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8609,  7.9714]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6973,  1.1358, -0.4249, -0.5752,  0.3057, -0.0560, -1.3442,  0.0093,
          0.6478, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.3294, -5.5000]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5138,  0.1118, -0.3274, -0.4593,  1.0911, -1.2928, -1.7609,  0.0333,
          0.6817, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.5788, -7.7712]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5516, -0.5551, -0.4107, -0.5699, -0.3589,  0.8114,  0.5898,  0.0706,
          1.3559, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.8896, -11.1219]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7077, -1.3537, -0.4029, -0.6417, -0.5862,  0.6362, -0.1179, -0.0261,
          0.3446, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.5947, -8.7624]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6573,  0.9902, -0.4129, -0.5927,  0.8713,  0.4941,  0.5914, -1.1555,
         -0.1206, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0432, -6.1809]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6345, -0.9560,  3.2374,  4.3738, -0.7122, -2.3404, -0.1291, -0.0570,
         -0.3008,  1.9426]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6469,  6.9736]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8903,  0.3489, -0.3618, -0.3886, -0.5668,  0.7810,  1.2097, -0.8425,
          0.1515, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7974,  5.8567]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2253,  0.8975, -0.0088,  0.6276, -0.3746,  0.2827, -0.1256,  0.1527,
         -0.9872, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3973, -6.4720]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-1.0962,  1.2896, -0.3557, -0.3771, -0.6541,  0.1127, -0.2752,  0.6059,
          0.4900, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.7697,  6.8210]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3619, -0.9274, -0.3991, -0.4723, -0.4305, -0.1306, -1.2509,  1.7838,
         -1.7075, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.0555,  10.2129]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5119, -1.1662, -0.3730, -0.3161, -0.8291,  0.6354, -0.3181, -1.1921,
         -0.5706, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.2571,  5.2836]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2185, -0.6055, -0.4041, -0.5691, -0.3196,  0.5573,  0.9266, -0.9406,
          0.4950, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.4787, -8.6492]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7625, -0.3877, -0.1812, -0.2600, -0.4590, -0.1407, -0.2561, -0.3941,
          0.0131, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9137, -6.0385]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4721, -1.1721,  1.0413,  2.5793,  0.0175, -2.9764, -0.0659,  1.8208,
         -1.2301,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.0206,  10.2539]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.0926, -0.9044, -0.3989, -0.5242, -0.0661,  0.5434,  0.9245, -1.3759,
          0.5057, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.1728,  7.2243]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2182, -0.5441, -0.1945,  0.2984, -0.6324,  0.0187,  0.8836, -0.1471,
         -0.2157, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0907,  7.1771]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4910,  0.0467,  0.1324,  0.3292, -0.3088, -0.0202, -1.0466, -0.4441,
         -0.4386, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.1822,  6.2703]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3250, -0.2087, -0.3864, -0.5067, -0.7650,  0.6126,  0.1249, -0.8048,
         -0.6394, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9149,  6.9780]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4521, -0.8362, -0.4055, -0.5563, -0.4453,  0.6442,  0.8345,  1.1598,
          1.1173, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3534, -8.5311]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2188, -0.6481, -0.3251, -0.3001,  0.4113,  0.6677,  0.6785, -0.2595,
         -0.5465, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0423, -7.1642]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.2587, -0.9454, -0.4005, -0.6483,  1.1182,  0.9092,  0.2638,  1.0320,
          0.8628, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6644,  6.7022]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8986, -0.5574, -0.3654, -0.3152, -0.3331,  0.6021,  0.0021,  0.0334,
         -0.9839, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3767, -6.4877]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3200, -1.4948, -0.4052, -0.6571, -0.5690,  0.8193,  0.8898,  0.2915,
         -0.6491, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5470, -6.6557]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9155,  0.8204,  0.0580,  0.8381, -0.1765, -0.3393, -1.1377,  0.7544,
         -0.4143,  0.3419]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1800,  8.3128]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5364, -1.0967, -0.4002, -0.5544, -0.5376,  0.5248,  0.3103,  0.7509,
         -0.5803, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.0264,  6.1107]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0418, -0.4781, -0.4051, -0.6596, -0.8795,  0.7841,  0.4104, -1.4921,
          2.1981, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.1224, -5.3056]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3065, -1.1947,  0.9645,  1.1009, -0.0978, -2.6967,  1.3043, -0.1977,
         -0.3067,  0.4753]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.1581,  10.4188]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.8148, -1.5651, -0.4021, -0.6608,  3.3713,  0.8338,  0.9976, -0.4789,
          1.2202, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.2577, -10.5038]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
tensor([[-0.3595, -0.7631,  7.0085,  2.9223, -0.6461, -2.4624, -1.0945, -0.8961,
         -1.3928,  1.4090]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-15.5701,  16.2444]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.1892e-03, -1.0601e+00, -4.0433e-01, -5.8482e-01, -8.4550e-01,
          8.8891e-01,  7.4703e-01,  4.4345e-02,  2.3421e+00, -1.1921e+00]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0915,  7.0947]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.2660, -0.1685,  1.6762,  2.8331, -0.6664, -0.2081, -0.1750,  1.2186,
         -0.9217,  0.2752]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-12.5058,  12.7860]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0554,  1.6558, -0.3062, -0.2416, -0.3720,  0.0984,  0.8619,  1.5060,
         -1.0737, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.8701, 10.0376]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9192, -1.3032, -0.4012, -0.5620, -0.7364,  0.7489, -0.3655, -1.6668,
         -0.1499, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9672, -9.1412]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5848, -0.3222, -0.1494,  0.4312, -0.6529,  0.4310,  0.3858,  0.8649,
         -1.1522, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.6578,  9.8161]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1034, -0.5993, -0.3727, -0.3714, -0.8282,  0.6128,  0.9377,  0.3549,
         -0.4681, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.9446,  9.0721]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1974,  1.0918, -0.3091, -0.2656,  1.1089,  0.3525, -0.2800, -0.6936,
         -0.2739, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9500, -6.0733]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5010,  0.2683, -0.3482, -0.3842, -0.3593,  0.2927,  0.8902, -1.7137,
         -0.5330, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3554,  7.4609]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7782,  0.4763, -0.2121,  0.0646, -0.4288,  0.0280, -0.1056,  0.8038,
         -0.2141, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0239, -7.1308]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 4.4526, -1.3396, -0.4013, -0.3655,  0.1189,  0.2465,  1.2777,  3.1963,
         -1.7318, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1588, -7.1591]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6370,  0.6717,  0.2548,  0.1251,  0.0184, -0.0318,  0.2443, -0.4230,
          0.3840, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9357, -6.0289]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3237,  0.4714,  3.5208,  3.4194, -0.1705, -1.2236, -0.6420, -0.4321,
         -1.3428, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-13.5184,  13.8740]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.0852, -0.2525, -0.4097, -0.6023, -0.2437,  0.7727,  0.4987, -0.3204,
          0.8766, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1090, -7.2623]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.1137,  1.5084, -0.3318, -0.5090, -0.3340, -0.5782, -0.0761, -0.2147,
          0.8314, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9818, -6.1091]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6591,  0.0720, -0.4151, -0.5532,  0.0167,  0.0991,  0.2753,  0.5813,
         -0.1853, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.1199, -5.2167]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0871, -0.0800, -0.4067, -0.6571, -0.6690,  0.7058,  1.6581,  1.1052,
          1.2143, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.3136, -7.4791]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7097,  1.2660, -0.3833, -0.5762,  0.4384, -1.1556, -1.4193,  0.1400,
          0.3084, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.5571, -5.6871]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9072, -1.3819, -0.4109, -0.6695,  5.2672,  0.3129,  2.2775, -2.1534,
          2.5377, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 11.8928, -12.2421]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0382, -1.3500, -0.4008, -0.6602,  1.4914,  0.7167,  0.4519, -1.0119,
          0.6025, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.0290, -9.2520]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M75LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M298.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M48RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B179.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B275.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M95RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M308.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M264.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M56LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M79LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B89LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B119LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M285.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B37RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B270.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M271.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M243.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B72RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M107RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B129.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M241.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M7LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M108RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M81RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B97RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M1RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M11RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B117RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M328.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B137.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B212.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B56LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M106RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B104RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B103RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B318.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B128.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B71RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B51LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B247.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B242.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B15LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M332.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M49RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M61LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B99RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B267.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B80RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M186.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B114RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B8LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B295.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M45RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B35LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor(1., device='cuda:3')
extra feats tensor([[-0.6948, -0.1467, -0.4240, -0.6125, -0.1161,  0.5635, -0.2117,  1.7984,
          0.8657, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1944, -6.3406]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1124,  0.3687, -0.3285, -0.4205, -0.8596,  0.3100,  1.1747, -0.4500,
         -0.8165, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.0074, -9.1203]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2016, -1.3398, -0.3997, -0.6399, -0.5522,  0.4638,  0.3425,  0.8030,
         -0.7860, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5812,  7.6806]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0358,  0.1883,  1.1153,  1.8703, -0.0921, -0.9359, -0.7923,  0.4709,
         -0.5122,  0.8088]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.2431,  9.4481]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6547,  0.5493, -0.4046, -0.4927, -0.1361,  0.7083,  0.7705,  0.7040,
         -0.1610, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.2264,  7.3017]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7825,  2.8219, -0.3668, -0.2252,  0.5245,  0.2647,  1.2366,  0.9003,
         -0.5743, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1251, -6.1918]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2396, -1.1684, -0.4047, -0.6546, -0.7978,  0.6085, -0.0497,  0.6112,
         -0.1309, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.6272, -6.7560]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4415, -0.1721, -0.4121, -0.5841,  1.8901, -0.9002, -2.4097, -0.8749,
          0.8796, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.1920, -9.4587]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8137,  1.3525, -0.3929, -0.5125,  0.1708,  0.2420, -0.5467,  1.2831,
         -0.0114, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9695,  6.0072]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4898,  0.0150, -0.2254,  0.1831, -0.5925,  0.5542,  0.8405,  0.2246,
         -0.5870, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9949, -9.1105]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5854,  0.9980, -0.0971, -0.2051, -0.0219, -0.4697, -1.2248,  0.4663,
         -0.9636, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0851, -7.1960]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.9404, -1.5406, -0.4038, -0.6570,  4.1966,  0.5068,  2.0441,  0.2646,
          1.5276, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.3679, -7.5939]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2600,  0.4822,  0.1329,  0.9007, -0.7564,  0.3175,  0.1708, -0.3810,
         -1.2043, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6202,  7.7311]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.1004, -1.3627, -0.3971, -0.6577, -0.6134,  0.8812, -0.2233, -0.1194,
          1.5132, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.6548, -5.8273]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3758, -0.5765, -0.4070, -0.5014,  1.0134,  0.6882,  0.1769,  0.6427,
         -1.1700, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9779,  6.0315]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8593,  0.4887,  0.0188,  0.3956,  0.1527, -0.6045, -0.1507,  1.1274,
         -0.6600,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.6472,  5.7534]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.6016, -1.4686, -0.4077, -0.6582,  4.5828,  0.7100,  0.6844, -0.0896,
          2.4681, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.2970, -7.5798]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6240,  0.4128, -0.4183, -0.5356,  1.1699,  0.3020, -0.2958,  1.0464,
         -0.7445, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.1141,  9.2040]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6562,  0.9085, -0.3392, -0.5201, -0.7064, -0.8504, -1.1365,  0.3874,
         -0.0323, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.0211, -8.1622]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9424, -0.8492, -0.4003, -0.5060,  0.5813,  0.3928,  0.1922,  1.1458,
         -1.0587, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.6600, -6.7541]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
extra feats tensor([[ 0.7236,  0.4394, -0.4233, -0.6483, -0.0521,  0.4287,  0.8293, -0.3217,
          0.9332, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6972, -7.8624]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0957, -0.5363,  0.1989, -0.0334, -0.3822, -2.2460, -0.2305, -0.9038,
          0.3786,  0.3419]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6533, -7.7193]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8314, -0.0840, -0.4146, -0.3212, -0.4610,  0.3986,  0.2981,  0.9711,
         -0.0078, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6821,  7.7633]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7807,  0.9179, -0.1618, -0.0083,  0.0720, -0.0869, -0.5405,  0.4441,
         -0.4053, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.9024, 10.0264]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2732, -0.1566, -0.1274,  0.3867, -0.2794,  0.0814,  0.1397,  0.3792,
         -0.6667, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.6321,  9.7700]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1212, -0.9249, -0.1344,  0.2325, -0.1208, -1.4529, -2.0826,  0.5660,
         -0.5600,  0.3419]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0825, -6.1583]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5061, -1.0689, -0.4007, -0.5432, -0.7898,  0.8964,  0.0510, -0.9977,
         -1.2578, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0343, -6.0997]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5994,  0.9380, -0.1491,  0.5345, -0.5065,  0.1842,  0.1851,  0.9496,
         -1.2068, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.0471,  8.1781]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8373,  0.9499, -0.3241, -0.5069, -0.3232, -0.2838, -1.9355,  0.9956,
         -0.2956, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5459,  8.6361]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3452, -0.4197,  0.1254,  1.3496,  0.2028, -1.3482, -1.8355,  0.8243,
         -0.6369,  0.2752]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.0410,  6.1239]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4844,  1.5259, -0.4234, -0.5584, -0.0880,  0.3248, -0.7017,  0.8391,
          1.3176, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.2861,  5.2821]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5220,  0.1954, -0.1842,  0.0762,  0.5266, -0.0334, -0.3178, -0.4637,
         -0.7021, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0399,  7.1094]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8705, -0.2239, -0.3810, -0.3951, -0.4794,  0.6789,  0.0563,  0.4826,
         -0.6491, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6263, -7.7569]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.7079, -1.4248, -0.4159, -0.6583,  2.5795,  0.6089,  2.9675, -1.1272,
          3.0492, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9558, -6.1619]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4882, -0.9270, -0.3988, -0.5781, -0.4095,  0.1088, -0.0228, -0.6977,
          0.4026, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3993, -6.5497]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3312,  0.5821, -0.2408, -0.1802, -0.7129,  0.1460,  0.7290,  0.3158,
         -0.8538, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5252,  7.6758]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3795, -1.6237,  8.5776,  5.3903, -0.4191, -3.1330,  1.5360,  0.5492,
         -1.1707,  1.4090]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-12.6684,  13.3760]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2682, -1.3204, -0.4025, -0.6601, -0.8531,  0.6910, -0.0156,  0.4164,
          0.8140, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9555,  5.9383]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3430, -0.6448,  6.4533,  3.7813, -0.5956, -2.1555, -1.2513, -0.6561,
         -1.4577,  0.2752]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.6320,  12.1223]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.7349, -1.0562, -0.3816, -0.1452, -0.4846,  0.7735,  0.6629, -2.8313,
         -1.6375, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3500, -8.4735]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.1708, -1.0464, -0.4075, -0.6456, -0.8001,  0.7539,  0.6306, -0.0123,
          2.3345, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5055,  5.4741]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2061,  0.6275, -0.4217, -0.6180,  0.6852,  0.0878, -0.6065,  1.0828,
          1.3652, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.8437, -8.0571]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1202, -0.2020, -0.1513, -0.4032, -0.5388, -0.2415, -1.4722, -0.4112,
          0.2144, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4422,  7.5136]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0448,  0.7606, -0.4003, -0.5815, -0.8576,  0.6472,  1.5464,  0.4359,
          0.1605, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.7956,  8.9134]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2038, -1.2772, -0.4064, -0.6627,  0.0424,  0.9032,  2.5066, -0.0861,
          1.8908, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.3590, -5.5311]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9112,  0.4345, -0.4104, -0.6101, -0.5824,  0.7560,  0.4845,  1.4319,
         -0.5558, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.1978, -5.2758]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6041, -1.2517, -0.4037, -0.6362, -0.2423,  0.3532,  0.1657, -0.7529,
          0.5071, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.8906, -10.0838]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1432,  0.1295, -0.4084, -0.5525, -0.7613,  0.7650,  0.6317, -1.0489,
          1.7045, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.2014, -5.3664]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2048, -0.3510,  0.1041,  0.9209,  0.1927, -0.3250, -0.6522,  1.3679,
         -0.9611,  0.4753]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.7372,  8.9067]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0779,  1.5345, -0.2226,  0.0789,  1.5121, -1.3025, -1.0030,  0.3570,
          0.0815,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.5354,  6.5969]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5373,  0.4635, -0.4145, -0.6096,  0.7052,  0.4749,  0.4047,  0.6663,
         -0.1160, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.8357, -4.9435]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5730, -0.6275,  3.0330,  2.8949, -0.2300, -2.3814,  1.2690, -0.1295,
         -0.4829,  1.2089]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.7952,  9.1380]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5906, -1.0553,  3.3998,  1.4189, -0.4567, -1.4709,  0.8028, -0.5790,
          0.2561,  0.5420]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.8034, 10.1451]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7931, -1.4391, -0.3997, -0.6625, -0.6841,  0.4498,  0.5920,  0.0096,
         -0.3870, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9482, -8.0886]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1579,  0.8891, -0.3477, -0.4839,  0.6033, -0.0504, -0.4396, -0.9927,
          0.2855, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6125,  6.6414]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5092,  0.0275,  0.1326,  1.0816, -0.3850,  0.4425, -0.6629, -0.5248,
         -0.8873, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.3865,  5.4480]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0437,  1.2186, -0.4204, -0.5536,  0.1030,  0.5668,  0.5205,  0.3059,
          1.5311, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4771,  7.4882]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3902, -0.4229, -0.3717, -0.4166, -0.7157,  0.7436,  1.2747, -0.9722,
         -0.2176, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5929, -6.7031]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7145,  1.2349, -0.2711, -0.3542, -0.4686,  0.0962, -1.1654,  0.3040,
          0.8851, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6849,  8.7596]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9368, -1.0520, -0.4000, -0.5467, -0.8217,  0.7408,  0.5440,  0.3005,
         -0.7977, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1834,  8.2842]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M18RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M35LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B207.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M288.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B66RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B114RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B148.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B11RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M163.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M293.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M116LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B44LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B172.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M40LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M101RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M179.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M155.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M127.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B127.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B143.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B19LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M104LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M112LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M211.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M182.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B126.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M198.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B170.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M25LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M14LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B132.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B108LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B142.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B287.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M126.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M327.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B210.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M322.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M80LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B310.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M62LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M304.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M171.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B65RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M140.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M290.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M151.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B201.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M72LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M58RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M89RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M281.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M220.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M6RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 1.5652, -0.1545, -0.3826, -0.5249, -0.2992,  0.7193,  1.4622, -2.4638,
          0.6589, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.4534,  5.5026]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9445, -0.5636, -0.3968, -0.4078, -0.5411,  0.3883,  0.1829,  0.9396,
         -0.3512, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3943, -8.5272]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4054,  0.1970, -0.4089, -0.5010, -0.4331, -0.5109, -0.9088,  0.7886,
         -0.3751, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.2837,  8.3872]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7634,  1.1740,  0.0707,  0.7774,  0.0419,  0.2616,  0.3877,  3.0075,
         -0.5145, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.8807, 10.0473]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3579,  0.3471,  0.1542,  0.7493,  0.0835, -0.9915, -0.1009,  0.5699,
         -0.6487,  0.2752]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.1352,  9.3096]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3386, -0.3624, -0.2646,  0.0325, -0.2845,  0.4124, -0.2669, -0.6948,
         -0.7671, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3972,  7.4984]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3479, -0.5327,  1.3597,  3.5299, -0.1498, -1.0533, -1.3642,  0.7978,
         -0.9379,  0.6754]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7383,  5.8818]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3441,  0.0693,  0.5813,  0.8785,  0.3802,  0.4803,  0.5349, -1.0969,
         -1.1065, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8898,  8.0075]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2779,  1.0369, -0.2771, -0.0822, -0.1994,  0.5362,  0.0500,  0.7137,
         -0.1703, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5419,  8.6481]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2657, -0.8071, -0.4049, -0.5887, -0.1749,  0.6678,  0.2776, -0.9108,
         -0.4787, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.3633,  6.4054]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0431, -0.6357, -0.4081, -0.5149, -0.9009,  0.6624,  0.7170,  0.5430,
          0.7262, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9550,  8.0181]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1978,  0.2396, -0.4134, -0.6062,  0.3520,  0.3970,  0.1129, -1.1187,
          0.7247, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0196,  7.0396]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0666,  2.0894,  0.0361,  0.0553, -0.7332,  0.5380,  0.2947, -1.6565,
         -0.0789, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.5362, -5.6285]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4058, -1.3858, -0.4022, -0.6700,  0.5073,  0.5304,  1.0222,  0.2853,
         -0.7949, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8161,  6.8805]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4437, -0.9597, -0.3074,  0.0606, -0.7508,  0.4923,  0.7704,  0.8836,
         -1.5308, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.3000, -9.4367]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4946, -0.8069,  2.5962,  2.9798, -0.4390, -2.4724, -3.4436, -0.2621,
         -0.7407,  0.4086]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.6886,  10.9455]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1850, -0.2376, -0.3224, -0.1705, -0.0328,  0.4083,  1.0571,  1.3803,
         -1.1694, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1820,  8.3177]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4967,  1.1842,  0.0078,  0.3655, -0.1774,  0.4868,  0.8977, -1.0034,
         -1.0687, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2505, -6.3308]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4232, -0.6710,  6.4366,  3.7873, -0.5337, -2.0663, -1.3028, -0.6566,
         -1.4385,  0.0751]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-13.5058,  14.0187]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9584, -1.4814,  1.1499,  1.9413, -0.1603, -2.5951,  1.3956,  1.0269,
         -0.6570,  0.7421]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-11.6510,  11.9464]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.0697,  0.6919,  1.0997,  3.0723, -0.7767,  0.1045,  0.4137, -0.4398,
         -1.3211, -0.1917]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3509,  8.5310]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4439, -1.5950, -0.3956, -0.6712, -0.0919,  0.8026,  0.1724, -1.5420,
          1.0763, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.3527, -9.5733]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.0681,  1.0918, -0.3876, -0.5345, -0.1700,  0.1512,  0.0350, -0.8404,
          1.3478, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1531, -7.3197]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1703, -1.6004, -0.4019, -0.6597,  1.8000,  0.5643,  0.6913,  0.6071,
          0.1500, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7310,  5.7178]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7992,  0.9346,  0.9848,  3.5485, -0.7952,  0.6120, -0.8243,  1.2376,
         -1.1084, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.8144,  9.9878]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5919,  0.7627, -0.3603, -0.4784,  1.2104, -1.0094, -2.8478,  0.5512,
         -0.2417, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.8026, -5.9529]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8176, -0.1202,  1.3918,  2.2353, -0.4265,  0.2115, -0.9296, -1.1789,
         -1.3296, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.0450,  10.2346]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5409,  1.1858,  0.1348,  0.6192,  0.0446, -1.2993, -1.0851,  0.6780,
         -0.0229,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.2843, -7.3789]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9786,  0.1388, -0.3417, -0.4100,  0.3739, -0.5241, -1.9259,  0.9992,
         -0.4809, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9856,  8.0504]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5993, -1.3795, -0.4005, -0.6668,  0.0724,  0.6132,  0.4371,  0.3125,
          0.1637, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1808, -6.3272]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3909,  1.2752, -0.0658, -0.0258, -0.6872,  0.4706,  0.8292, -0.4683,
         -0.3056, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7221,  5.8002]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8465,  0.3173, -0.3950, -0.5793, -0.3318,  0.3150,  0.9015,  0.4084,
         -0.7133, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.0806,  8.1834]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6435,  0.5947,  0.0048,  0.2377, -0.7240, -0.4111, -0.6697,  0.4608,
         -0.2304, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7309, -6.8274]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2731,  0.3880, -0.4097, -0.5932,  1.2795,  0.1686,  0.3614, -0.3798,
          0.0451, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7905, -6.9360]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3530, -0.6202, -0.3833, -0.3600, -0.6637,  0.4197, -0.0167,  1.6449,
         -1.1464, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9630, -8.0612]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0774, -1.5449, -0.3973, -0.6579,  0.5269,  0.8994, -0.4570, -0.1332,
          1.3303, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.0228, -8.2665]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8241, -0.0307,  0.8688,  0.9199,  0.0838, -1.5027, -0.8541,  0.4063,
         -0.3447,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8405,  7.9927]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4232,  1.2450, -0.3954, -0.5962, -0.1444, -0.0222,  0.4328, -0.4910,
         -0.1516, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.0996, -7.2309]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2746,  1.8314, -0.3253,  0.3178, -0.2392,  0.3061,  0.9100,  0.6143,
         -0.7826, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.6218,  6.7288]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1586, -1.2110, -0.3984, -0.6088, -0.9042,  0.6801, -0.2576, -0.9875,
         -0.0560, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4744,  7.5229]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.3097, -0.6863, -0.4063, -0.6546, -0.6824,  0.8129,  0.5163, -0.1008,
          2.2877, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.9939, -10.2516]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.2995, -0.9403, -0.3980, -0.6529, -0.8440,  0.8275,  0.2120, -0.1065,
          2.2703, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.6281, -9.8539]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1396,  1.5890, -0.3515, -0.5112,  1.5473, -0.8030, -1.4199,  0.5465,
          0.2079, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5994,  7.6623]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.3088, -1.5191, -0.4038, -0.6575,  0.2840,  0.9056,  0.7131,  0.2899,
          2.2346, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.2543, -5.4354]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0851, -0.8638, -0.4048, -0.6243, -0.3948,  0.8107,  1.2392, -0.5504,
          0.5442, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.6245, -7.7898]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3580,  1.8289, -0.0691, -0.0310, -0.7153,  0.3541,  0.3813, -0.4704,
         -0.3103, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6463,  7.7448]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3372,  0.9550, -0.3980, -0.4242,  0.1685,  0.5910,  1.1115,  0.9195,
          0.3103, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4012,  7.4651]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5621, -0.8145, -0.3930, -0.4891, -0.3985,  0.7028, -0.2051, -1.2414,
          1.0748, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3837, -8.5960]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4025, -1.5625, -0.3942, -0.6684,  0.8637,  0.8967, -0.5949,  0.0205,
          0.0020, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3568,  7.3730]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5589, -1.2280, -0.3996, -0.6623, -0.6637,  0.5145, -0.0716,  0.7913,
         -1.0351, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.9940,  5.0421]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5188, -0.0967,  0.0295,  0.6582, -0.3121, -0.3162, -0.3645,  0.3519,
         -0.3880,  0.2085]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.5355,  5.6358]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0028, -0.7969, -0.3948, -0.2624, -0.8277,  0.8418, -0.2227, -0.1267,
         -0.9595, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1039, -6.1733]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2686, -1.3009, -0.4042, -0.6571, -0.4750,  0.7644, -0.1894,  1.1031,
          1.2110, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9640, -6.1427]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0928,  1.2015, -0.0057,  0.1478, -0.2693, -0.7613, -0.5987, -0.6507,
         -0.4870,  0.0084]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.1596,  9.3038]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5396,  0.4940,  0.2893,  0.4070, -0.0214, -1.0985, -0.8530,  0.3068,
         -0.5369,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.7049,  9.8842]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9503, -0.0330,  0.2307,  2.2968, -0.6560,  0.6185,  1.4417,  2.8487,
         -1.3908, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3751, -6.4217]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1025, -0.6559, -0.4102, -0.6421, -0.4345,  0.7846,  0.3988,  1.0629,
          1.4487, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3464,  7.3539]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0420,  1.1166, -0.2349, -0.0955,  0.3918,  0.4061,  0.2949, -1.1772,
         -0.5253, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9425, -7.0427]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7958,  0.4961, -0.2357,  0.0271, -0.6081, -0.2960, -0.8755,  1.3654,
         -1.2952, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.2978,  9.4445]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1595,  0.9364, -0.2111, -0.4000,  0.9316, -0.2534, -0.7117, -0.6241,
         -0.0887, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4290,  7.4654]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M316.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M192.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M8LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M153.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B203.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M317.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B27RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M20RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M44LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B3LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M88RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M279.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M244.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B69LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B87RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M258.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M109LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B71RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M47RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B38LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M98LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B171.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M96RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M50RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B136.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B39LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B189.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B25RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M113RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B39LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M51RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M38LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B16RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B26RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M101RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B57RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B67LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M329.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M42RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B252.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M39RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M157.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M27LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B165.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B77LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M59LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M152.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B54RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M62LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B21LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M72LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M111LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M145.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B138.jpg
MaximumVertexDegree_27
Extra Feats!
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.9572,  0.2589, -0.3898, -0.3277, -0.2534,  0.4277,  0.0932,  1.7325,
         -0.3868, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6052,  7.7034]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1635,  0.9421, -0.3353, -0.5006, -0.4144,  0.5681,  0.0842, -1.7567,
          0.8790, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.1294, -9.3392]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3868,  0.8917,  0.9613,  3.1540, -0.6325, -0.3530,  0.6032,  0.2207,
         -1.3279, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3813,  7.5201]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1698,  0.7530, -0.2780,  0.3837, -0.4947,  0.7531,  0.9763, -0.6364,
         -0.7982, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5719, -6.6330]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1694, -0.3517,  1.8785,  1.8412, -0.5763, -2.1240, -1.9512, -0.7793,
         -0.2328, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0037,  7.1702]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4314, -1.5651, -0.3993, -0.6628,  4.2640,  0.9003,  0.4722, -0.4263,
          3.4656, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.0822, -9.4547]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 3.8894, -0.8435, -0.4284, -0.6571,  1.3699,  0.9906, -0.2483,  0.1989,
          2.4479, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.5620, -6.7494]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2668, -0.3145,  1.1608,  0.3776, -0.2085, -2.1585, -1.0458, -1.5820,
          0.5386, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.7356,  8.8917]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7064, -1.4077, -0.3990, -0.6644,  0.4991,  0.5221,  2.0275,  0.5473,
         -0.3079, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.8427,  6.9169]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4104,  1.1001,  0.1757,  0.9304, -0.5194,  0.2525, -0.1263, -0.1563,
         -0.8091, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.0230,  10.1767]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7975, -0.2731,  0.3544,  1.2803,  0.1858, -1.3795, -1.2223,  2.0145,
         -1.0632,  0.5420]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.9499,  9.1264]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.8656, -0.6358, -0.4200, -0.6604,  1.1666,  0.4797,  2.0746, -1.3730,
          0.1362, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1869, -7.3133]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9685, -1.2296, -0.3914, -0.5203, -0.1764,  0.6943,  0.6091, -0.9996,
         -0.7341, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5271,  7.6208]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6804,  0.4706, -0.3831, -0.4306,  0.6385,  0.1169,  0.2544,  0.6230,
         -0.1029, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7136, -6.8246]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2652,  0.3052, -0.3896, -0.4724,  0.3143, -1.3852, -0.7935,  1.0250,
          0.0425, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.8835, -4.9668]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.1075,  1.3367, -0.4307, -0.6170, -0.2039, -1.0264, -1.0853,  1.1293,
         -0.0199, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7418, -6.8571]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1556, -1.2471, -0.3999, -0.6615, -0.7845,  0.7497,  1.2555, -0.8942,
          1.0416, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.7676, -8.9614]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4408, -0.9355, -0.3871, -0.3996, -0.7815,  0.5530,  0.4874,  0.4292,
         -0.8425, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9938,  7.0600]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.2853, -1.0991, -0.4002, -0.6404, -0.7182,  0.8268,  0.1567, -0.0189,
          1.1768, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9204, -9.1125]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9859, -1.2969,  6.0275,  4.0038, -0.1714, -2.6065, -0.7674,  0.8711,
         -1.3498,  2.8763]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-12.3598,  12.9746]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 0.7375, -0.7407, -0.4066, -0.5977, -0.7238,  0.6210, -0.0117,  0.8050,
         -0.0162, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.3948,  6.4552]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1447,  0.0550, -0.4234, -0.6066,  0.6113,  0.1905, -0.7611,  0.3176,
         -0.1626, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.2002, -8.3880]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.7328,  0.2339, -0.2971, -0.2597, -0.8143,  0.4881, -0.1617, -1.2964,
         -0.0942, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3976,  7.4782]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3569,  1.0801, -0.2733, -0.0788,  0.0484,  0.4655,  0.5286,  0.7146,
         -0.2237, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.7518,  6.8284]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.9329, -1.4976, -0.4015, -0.6642,  0.5536,  0.7206,  1.4553, -2.2235,
          1.0177, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.8077,  5.8313]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2358, -0.4917, -0.4023, -0.6095, -0.5117,  0.6218,  0.4199, -0.0595,
          0.1462, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.1347,  5.1532]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8789, -0.2999, -0.4095, -0.6440, -0.6172,  0.5560, -0.1002,  0.5665,
         -0.6710, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9973, -8.1348]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0651, -0.8947, -0.4048, -0.6666, -0.5168,  0.8474,  1.1714, -2.1178,
          1.1921, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.0790, -5.2195]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.2166, -0.6367, -0.3861, -0.4245, -0.7547,  0.7352,  1.0405, -0.7748,
         -0.5876, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7136,  7.8250]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4915,  0.0564, -0.1822, -0.0941, -0.7248,  0.7229,  0.9118, -0.9480,
         -0.3310, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.5259,  7.6196]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8823,  0.4486,  0.2763,  0.4347, -0.5809, -0.6046,  0.1767, -1.2583,
         -0.2347, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.2949,  8.4290]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1176, -0.2971, -0.3852, -0.3723, -0.5956,  0.8237, -0.0220,  0.8937,
         -1.0462, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3841,  8.4946]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.6571, -1.5743, -0.3946, -0.6611,  3.0143,  0.9015, -0.7392,  1.5207,
          1.7496, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.3489, -9.6233]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6035, -0.5019, -0.4134, -0.6039,  0.8099,  0.4755,  0.0332,  0.0559,
          0.3771, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.7331,  5.7184]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3957, -1.2596, -0.3986, -0.6727, -0.4154,  0.6024,  0.5065, -1.0693,
         -0.3973, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.2169, -7.3552]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9269,  0.0885, -0.3703, -0.3879, -0.3642,  0.1483, -0.7696,  0.9768,
         -0.3744, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0061,  7.0753]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3597, -0.7429, -0.3820, -0.2579, -0.2775,  0.5157, -0.3915, -0.0803,
         -0.2688, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.2136,  8.2940]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5958,  0.0395,  0.3615,  0.5309, -0.5268, -1.7026, -2.0108,  0.6707,
         -0.2569,  0.0751]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0479, -6.1052]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.9284,  0.5154, -0.3479, -0.4430, -0.3815,  0.3023, -0.5351, -0.9588,
          0.1100, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.0772,  7.1530]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6209, -0.7944, -0.1442,  0.4260, -0.5352,  0.3402, -0.3147,  0.8668,
         -1.1531, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.3977,  9.5455]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M262.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B99RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M26RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B48LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B232.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M26RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M306.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M143.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M248.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B314.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M86RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B109LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B263.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B14LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B262.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M29LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B77LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M66LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M284.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B250.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M164.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M43RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M122.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M54LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B249.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B281.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M22RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M142.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M92LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M128.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B45LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M178.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B223.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M133.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M292.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B38LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M214.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M263.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B88RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B299.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M42RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M118RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B85RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B286.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M280.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M32LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M129.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M64LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M98LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B178.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B25RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B251.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B34RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B320.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 1.4554,  0.2412, -0.3199, -0.3297, -0.6940,  0.7514,  0.8866, -0.5950,
         -0.7916, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1788, -8.2806]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9189, -1.3449, -0.4078, -0.6649, -0.3591,  0.6632,  1.4206, -1.2256,
          0.5516, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9803, -7.1418]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3591, -0.1711, -0.2634,  0.0264, -0.3587,  0.4062,  0.5354, -0.6947,
         -0.7635, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7746,  7.8854]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0778, -1.4010, -0.4040, -0.6573, -0.4516,  0.9078,  1.0705,  0.0268,
          1.1715, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-4.7388,  4.7360]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4935, -1.1863, -0.4093, -0.6518, -0.7164,  0.6574,  0.7871,  0.1118,
         -0.7698, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1052, -6.1915]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2833, -1.5172, -0.4077, -0.6607,  4.0490,  0.5529,  1.6148, -1.6587,
          0.9680, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9830, -9.2302]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0059, -0.8407, -0.3872, -0.5059, -0.8133,  0.6387,  0.0032,  0.5272,
         -0.8817, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.0783,  5.1452]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1295,  1.1715, -0.0614, -0.1676, -0.3889,  0.4522,  0.2925, -1.5842,
          0.2133, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.4098,  6.4926]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3761, -0.3286, -0.3449, -0.4352, -0.1964,  0.4794,  0.4954,  1.1044,
         -0.2273, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3679,  8.4651]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7757,  1.7772, -0.3794, -0.4673, -0.3099,  0.1385, -0.1067,  0.6920,
          0.8791, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6668,  7.7290]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0552,  0.4850, -0.3220, -0.2569, -0.5500,  0.3026, -0.5753,  0.9159,
         -0.1564, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.3648,  8.4565]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6240,  0.9100, -0.4059, -0.5177, -0.2796,  0.0338, -1.1445,  0.4448,
         -0.4036, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3033, -6.4422]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.5801, -0.3693, -0.4072, -0.6062,  2.0206,  0.6526,  0.8994,  0.2182,
         -0.2959, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.6446, -5.7641]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4435, -0.9892, -0.3999, -0.6574, -0.1329,  0.8276, -0.1911,  0.5021,
         -0.5226, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.6495, -8.8172]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1900, -1.8769, -0.4011, -0.6603,  0.4973,  0.3005,  0.9456, -1.0512,
          1.5591, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.7436, -11.0118]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9730, -0.6401,  1.2919,  2.3471, -0.5675, -2.4143,  1.7062,  1.1570,
         -0.8165,  0.4753]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7938, -5.7285]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1691, -0.6787,  1.8964,  2.9180, -0.5930, -2.0521, -0.7623, -0.4884,
         -0.3125,  1.2089]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.8898,  6.1067]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6277,  0.7322, -0.4030, -0.5651,  0.7054,  0.7319, -0.0679, -1.0357,
          0.7783, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.3082, -7.4896]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7142, -0.1955, -0.3616, -0.4918, -0.5449, -0.1620, -0.4609,  0.7261,
         -0.1334, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.8197, -6.9609]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0507, -0.2814, -0.4108, -0.5434, -0.7013,  0.6113, -0.0614,  0.2278,
          0.1813, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1987,  8.2638]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.5169, -0.7569, -0.1799,  1.4523, -0.6042,  0.2380, -0.3749,  2.0094,
         -0.8375, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9292,  6.0103]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6420, -0.3168,  0.6497,  0.4131, -0.1707,  0.4104,  0.8857, -1.8539,
         -1.0367, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.9591,  7.1092]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6944, -0.2468, -0.4076, -0.5620,  0.7969,  0.3832,  0.5140, -0.5747,
          0.0470, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.3490, -5.4982]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.0905,  1.2321,  0.5579,  0.8711,  0.8136, -1.5817, -1.6227,  0.6714,
         -1.0620, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.7116,  9.8758]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7056, -0.2615,  2.9854,  4.0078, -0.4743, -1.3464, -0.4326,  0.4710,
         -0.8662,  1.2089]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.4461,  9.7701]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6824, -0.4540,  0.6161,  0.9205, -0.7164, -1.5652, -0.9135, -0.5712,
         -0.1308, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-10.6526,  10.8208]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9375, -0.5971, -0.3677, -0.5203, -0.1987,  0.8260,  0.7138, -0.3124,
         -0.1693, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.3514, -8.4970]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0616, -0.9846, -0.4028, -0.6528, -0.8866,  0.7033,  0.5415, -0.2253,
         -0.0333, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.0636, -9.2257]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5093,  0.1577, -0.3635, -0.3829, -0.0171,  0.5588, -0.2580, -0.2052,
         -0.2810, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.8476,  8.9242]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8194, -1.2928, -0.4115, -0.6602,  7.3926,  0.8863,  1.8817,  0.1323,
          2.2879, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.8870, -10.2439]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8189, -0.6794, -0.4030, -0.5289, -0.1891,  0.3851,  0.5505,  1.3058,
         -0.8074, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.2574,  6.3460]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1657,  0.8859,  0.5760,  0.8612,  0.4042, -1.6935, -1.0457,  0.6710,
         -1.0208, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5918,  8.7475]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0861, -0.9604, -0.3995, -0.6143, -0.8167,  0.7322, -0.4981,  0.5999,
          0.2829, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.0467, -6.1874]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6328,  0.7096, -0.2430, -0.1578,  0.4881, -0.4797,  0.0299,  0.4904,
          0.0177, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.6794,  7.7674]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.3681, -0.8443, -0.4029, -0.4828,  0.7542,  0.6567,  0.8033, -1.2830,
         -0.4499, -0.6585]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.6221, -8.7578]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6843,  1.8033, -0.3607, -0.3692, -0.3797,  0.4835,  0.6653,  0.5043,
          0.4273, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9756,  8.0535]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.4561,  0.0599, -0.3815, -0.5338,  1.2606,  0.5245,  0.0138, -0.3815,
         -0.4866, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4884, -7.6251]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.7446, -1.6628, -0.3970, -0.6574,  1.8544,  0.7929, -0.7466,  1.5546,
          1.4055, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.8261, -7.0269]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.1532,  2.2122, -0.3951, -0.4308,  1.5948,  0.2849,  0.0393,  0.0153,
          1.1535, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1972, -8.3964]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.3894, -1.4575, -0.4006, -0.6582, -0.7614,  0.8024,  1.2949, -0.1203,
          1.4597, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 4.9374, -5.0638]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.1521,  0.2340, -0.3729, -0.5697,  0.4128, -0.9725, -0.7992,  0.1868,
         -0.3437, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3014, -6.4173]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4293, -1.1833, -0.4076, -0.6089,  0.3711,  0.6372,  0.6458, -1.3334,
          1.1613, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.4941, -6.6854]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7741,  0.0551,  0.4708,  2.2413, -0.5748,  0.9820,  0.3925,  0.4855,
         -1.7482, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1766, -6.2280]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4466, -0.8749,  2.5938,  2.9706, -0.5365, -2.4409, -2.3011, -0.2614,
         -0.7667,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.4824,  8.7118]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3273, -1.5089, -0.3967, -0.6585, -0.2721,  0.8304, -0.4655, -0.0688,
          0.6832, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7832, -5.9598]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7132,  0.3059, -0.3867, -0.1962,  1.4164,  0.5881,  0.4833, -0.8796,
         -0.7194, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2873, -6.3913]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.9210, -1.3385, -0.3975, -0.6581, -0.1656,  0.8967, -0.4447, -0.2761,
          3.6864, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9476, -7.1938]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6348, -1.5594, -0.3938, -0.6441, -0.2251,  0.8261, -0.6689, -0.6835,
         -0.1053, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1239, -8.2965]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2244, -1.4399, -0.3946, -0.6454, -0.8772,  0.8075, -0.3280,  1.0548,
         -0.1672, -0.3918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2151, -6.3195]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4165,  1.1318, -0.1208, -0.3907, -0.6362,  0.5703,  0.7345, -1.6196,
          1.0682, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.7044, -9.8864]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4627, -1.0463, -0.4081, -0.6571, -0.4016,  0.6574,  1.8263,  1.6918,
          2.3778, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3080, -6.4856]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0358, -0.7317, -0.4034, -0.5741, -0.1087,  0.8312,  1.0966, -0.9465,
          0.2076, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 9.3161, -9.4824]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1591, -0.7558, -0.3242, -0.1711,  0.0762,  0.2513, -0.3749,  1.3847,
         -1.1340, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.4726,  5.5530]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4952, -0.9970, -0.3900, -0.3991, -0.7995,  0.3931,  0.1955,  0.4282,
         -0.8173, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.4720,  8.5745]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.2076, -1.3524, -0.4067, -0.6602, -0.8558,  0.7053,  1.0935, -1.4895,
          2.1685, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.2925, -8.5105]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3813,  1.3966, -0.4155, -0.6052, -0.2492,  0.4683,  1.3911, -1.1167,
          0.8478, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.4700,  7.5269]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8768, -0.0596, -0.3451, -0.4448,  1.9012,  0.3675, -1.0406, -1.8305,
          0.4163, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.8576, -6.0406]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8849,  0.0526,  0.3106,  0.5487,  0.1982, -2.6536, -1.1668,  0.0286,
          0.4812,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.8573, -6.9497]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8962,  0.6138, -0.2675, -0.3943,  1.1933, -0.2263,  0.0435,  0.5143,
         -0.3753, -0.1250]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1665, -7.2780]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5250,  0.2670, -0.3541, -0.5023, -0.3272,  0.6181, -0.0653, -1.5421,
         -0.1498, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.4960, -8.6531]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M78LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B260.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B100RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M278.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M282.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M331.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B19LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M303.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M251.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M255.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B78RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B33LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M252.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B175.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M249.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M99RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B236.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M27LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B147.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M19LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B78LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B52LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B93RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B312.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B20RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B153.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B54RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M237.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B35LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B255.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B48LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B120LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B98LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B113LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B296.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B92RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M260.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M245.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B144.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M28RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B231.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B266.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B5LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B322.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B239.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B265.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B8LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B36RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M219.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M16LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M330.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M19LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B186.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B180.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[-0.5640, -0.8355, -0.3745, -0.4088, -0.7750,  0.6383,  0.2121, -0.4126,
         -0.7822, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7704, -7.8945]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1596, -1.2620, -0.4013, -0.6580,  1.4460,  0.6931,  0.2702, -0.7671,
          0.8897, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.4364, -6.6396]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9883,  1.3314, -0.4211, -0.6037, -0.4794,  0.0949,  0.4579,  1.3802,
          0.3184, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.7924, -7.9387]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.3003, -1.4850, -0.3993, -0.6624,  1.0805,  0.5210, -0.0238, -1.6574,
          1.0795, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.8013, -10.0605]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.2449,  0.9269, -0.3897, -0.4499, -0.1539, -0.0780, -0.5123,  1.0080,
         -0.6093, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.0513,  5.1024]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9420,  0.3822, -0.2365,  0.0711,  0.8093, -0.1808, -1.3305,  1.2211,
         -0.1432, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.8572,  5.8835]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9184, -0.1415, -0.3445, -0.3338, -0.6386,  0.3220,  0.3519,  1.6557,
         -0.8786, -0.7919]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.1039,  9.2418]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0404,  1.3226, -0.4033, -0.5072, -0.3997, -0.0459, -0.1527,  0.9800,
         -0.8564, -1.0587]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6253,  8.7293]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1825, -1.2604, -0.3969, -0.5550, -0.9001,  0.4940,  0.2443,  0.0767,
         -0.6586, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.5750, -8.7117]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.6453, -1.1563, -0.4019, -0.6576, -0.3772,  0.7712,  1.1538, -0.0138,
          0.8218, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.4911, -8.6648]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.8629,  1.9837, -0.4120, -0.5907,  0.3719, -0.0125, -0.4283,  0.1345,
         -0.4622, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3819, -6.5149]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7285, -1.1323, -0.4002, -0.6771,  0.4884,  0.7860,  1.0757,  0.8391,
          0.2120, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.9424, -10.1245]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.9349, -1.0058, -0.4054, -0.6480, -0.8843,  0.8170,  0.7231,  1.1017,
         -1.0031, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.1799, -5.2191]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4880, -1.0976, -0.4046, -0.5713, -0.2571,  0.1691,  0.6870,  0.3458,
         -0.3511, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.4617,  6.5263]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7865, -0.3965, -0.1016,  0.2879, -0.3336, -0.1960, -0.3353,  0.5918,
         -0.3678,  0.1418]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.1608,  8.2881]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3929, -1.0686,  1.3477,  2.8603,  0.1611, -2.7577,  0.3366,  0.8186,
         -0.8714,  1.1422]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9658,  6.1961]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5724, -0.4037, -0.4361, -0.6412, -0.4581,  0.7770,  0.7595,  0.7102,
         -0.9823, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.7010, -6.8071]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0594, -0.0495, -0.1749,  0.2029,  2.6524, -1.7320, -0.7524,  1.1938,
         -0.6417, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.0149, -5.1042]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 4.0434, -1.7224, -0.4027, -0.6575,  0.4001,  0.8676,  1.5670,  0.8165,
          3.6306, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.1378, -7.3385]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2996, -0.5375, -0.4098, -0.6406, -0.6068,  0.8120,  1.2727,  0.6979,
          0.9560, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3993,  7.4368]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
tensor([[ 5.3205,  1.9220, -0.4010, -0.4270, -0.1600,  0.7078,  1.6516, -2.4839,
          2.3353, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7059,  7.7750]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1161, -0.3258,  0.4214,  0.9676, -0.5782,  0.3168, -1.6317, -0.6173,
         -0.6672, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.0709,  8.1779]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9462,  0.4569,  0.5181,  0.2024,  0.0482, -1.9282, -2.3250,  0.5973,
         -0.5040, -0.0583]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.4649,  8.6076]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8891,  0.6999, -0.1088,  0.0930, -0.7164,  0.6210,  0.4163, -1.8135,
         -0.5385, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.8702,  8.9859]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.9339, -1.1750, -0.4033, -0.5915, -0.5006,  0.6616,  0.3522,  1.4348,
         -0.7247, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.4970,  6.5556]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4253,  0.3864,  0.5685,  0.5732, -0.2008, -0.3794, -0.8383, -0.4326,
         -0.3300, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5767,  8.7060]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.9912, -1.3179, -0.3978, -0.6592,  0.2416,  0.9123, -0.5861,  0.1739,
          1.3296, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[  9.9050, -10.1398]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.7359,  0.0497, -0.4011, -0.5922, -0.6777,  0.8227,  1.3414, -2.1141,
          1.2654, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.2000, -6.3551]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1978, -1.0678, -0.3777, -0.4538,  0.5459,  0.4852,  0.1382,  0.1720,
          0.1357, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.1614, -6.3125]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1931,  0.7370, -0.3653, -0.3718,  0.0391,  0.6482,  1.0800,  0.4999,
          0.9602, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.8860,  7.9388]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.4942, -0.2120, -0.3050, -0.3162, -0.8417,  0.6142,  0.5693, -1.5004,
          0.3453, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.7062,  8.8035]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 2.4920, -1.6082, -0.3944, -0.6670, -0.6687,  0.9684, -0.8682, -2.2471,
          1.0201, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.9278,  7.9679]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.8445, -0.5579, -0.3719, -0.5209, -0.4613,  0.7090,  1.6448, -0.3102,
         -0.1326, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.9780, -7.0851]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.3850, -0.6942, -0.2569,  0.9688, -0.6837,  0.4049, -0.2279,  3.1701,
         -1.5013, -0.9253]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.7647, -5.8307]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6489,  3.1152, -0.2913, -0.4332,  0.5072, -0.4670, -0.5336,  0.9184,
         -0.3307, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9439, -8.0554]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.2604, -1.7816, -0.3938, -0.6586,  5.9974,  0.9132, -1.6102,  0.2319,
         -0.1623, -1.3922]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.3080, -7.6006]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0889,  1.5697, -0.2043,  0.1905,  0.7165,  0.3558, -0.6472,  0.2339,
          0.3700, -0.4584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.6985, -6.8399]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6467, -1.3260, -0.3977, -0.6693, -0.1390,  0.6647,  0.3469, -0.1208,
         -0.7626, -1.2588]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.7498,  7.8173]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.6126, -1.4626, -0.3945, -0.6671, -0.5183,  0.7812, -0.6191,  0.8244,
          1.6881, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.1034, -8.3223]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.1195, -1.2699, -0.4080, -0.6607,  5.0090,  0.8485,  2.2816,  0.3019,
          1.6799, -1.4589]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 10.1974, -10.4932]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
Shape features are only available 3D input (for 2D input, use shape2D). Found 2D input
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
GLCM is symmetrical, therefore Sum Average = 2 * Joint Average, only 1 needs to be calculated
/mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B100RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B241.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B151.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M257.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M161.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M112LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B102RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B101LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B62LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M168.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M73RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M197.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M77RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M236.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M239.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M148.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B52LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B105RMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B130.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M43RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M247.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M85LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B177.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B149.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B117RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B43LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B321.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M310.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B59RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B188.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M120LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B184.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B313.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M213.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B216.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M314.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M296.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M215.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B205.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B41RCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M291.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B91LMLO.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M74LCC.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B280.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/M210.jpg
MaximumVertexDegree_27
Extra Feats!
cur img path is: /mnt/520/lijingyu/lijingyu/zlw/BenignOrMaligantDiagnosis/datasets/data_augmentation/roi/B168.jpg
MaximumVertexDegree_27
Extra Feats!
tensor([[ 0.1327,  0.7959, -0.2708, -0.1888, -0.7270, -0.0951, -0.0154,  0.6735,
         -0.9858, -0.5918]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-7.3448,  7.4679]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5739,  0.4137, -0.3347, -0.4598,  1.0802, -1.4996, -0.8511,  0.0337,
          0.6779, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.4670, -7.6281]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.0375,  1.2464, -0.4205, -0.6021, -0.4459, -0.0956,  0.7504,  1.3802,
          0.3184, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.9215, -6.0469]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.1668, -0.1183,  0.2627, -0.1907, -0.4905, -1.5752, -2.3796, -0.6801,
         -0.2760, -0.2584]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-9.0144,  9.1405]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.7835,  0.9685, -0.4247, -0.6468, -0.7932,  0.6979,  0.4395,  0.6831,
          0.6443, -1.3255]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 5.4526, -5.5746]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5507, -1.3404,  1.0227,  1.6842, -0.0758, -2.5546,  0.4346,  0.5308,
         -0.7328,  0.2752]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.9291,  9.1643]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6993, -0.1350, -0.3787, -0.4690, -0.6257,  0.6673,  0.9316,  0.3260,
          0.1250, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.7681,  6.8411]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.4443,  2.7529, -0.4108, -0.5546, -0.2448,  0.3294,  0.0134,  0.6446,
          0.4026, -0.9920]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-6.5876,  6.6272]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.9530, -0.8384, -0.4001, -0.6597, -0.2036,  0.6280,  0.7773, -0.7316,
          0.4797, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 6.3290, -6.4736]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.5520,  0.0573, -0.3431, -0.4973,  5.0962, -0.7631, -0.4866, -0.6215,
          0.3580, -0.5251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.2567, -8.4945]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-1.2733, -0.4476,  1.6724,  2.8317, -0.6596, -0.4547, -0.3544,  1.2191,
         -0.9422,  0.4086]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.6631,  8.8865]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.2607, -0.9517, -0.4030, -0.6551, -0.6896,  0.7474,  0.5040,  0.6110,
         -0.0982, -1.1254]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 7.9978, -8.1466]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 1.0873,  0.2966,  0.3847,  0.6536, -0.6816, -1.1201, -1.2376, -1.7317,
         -0.3113, -0.3251]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-8.5199,  8.6645]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.0576, -1.0117, -0.4043, -0.6518, -0.8763,  0.5943,  0.1862, -0.2238,
         -0.0215, -1.1921]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.9542, -9.1293]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[ 0.5963, -0.8575,  0.0136,  0.7007,  0.1750,  0.8838,  0.7809, -1.0073,
         -1.1791, -0.8586]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[-5.9057,  5.9786]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([1], device='cuda:3')
the labels is: tensor([1], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
extra feats tensor([[-0.6878,  0.1884, -0.4079, -0.3947,  2.0136,  0.4476,  0.7139, -0.4970,
         -0.2049, -0.7252]])
inputs shape: torch.Size([1, 3, 256, 256])
extra feats: torch.Size([1, 10])
outputs: tensor([[ 8.7024, -8.8827]], device='cuda:3', grad_fn=<AddmmBackward0>)
the preds is: tensor([0], device='cuda:3')
the labels is: tensor([0], device='cuda:3')
corrects num: tensor(1., device='cuda:3')
running corrects: tensor(856., device='cuda:3')
------------------------- * -------------------------
labels: [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0]
preds: [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0]
paths: [('M337.jpg',), ('M336.jpg',), ('B225.jpg',), ('B278.jpg',), ('B47LMLO.jpg',), ('M44LMLO.jpg',), ('B125.jpg',), ('B23LCC.jpg',), ('B95LMLO.jpg',), ('M196.jpg',), ('B276.jpg',), ('M61LCC.jpg',), ('M208.jpg',), ('M114LMLO.jpg',), ('M269.jpg',), ('M36RCC.jpg',), ('M313.jpg',), ('M226.jpg',), ('M121.jpg',), ('B193.jpg',), ('B233.jpg',), ('M201.jpg',), ('B120LMLO.jpg',), ('M68RMLO.jpg',), ('B36RCC.jpg',), ('M51RMLO.jpg',), ('B110LMLO.jpg',), ('B293.jpg',), ('M320.jpg',), ('M273.jpg',), ('M150.jpg',), ('M135.jpg',), ('B53LCC.jpg',), ('B303.jpg',), ('M218.jpg',), ('M156.jpg',), ('M312.jpg',), ('B63LMLO.jpg',), ('M52LMLO.jpg',), ('B226.jpg',), ('B304.jpg',), ('B228.jpg',), ('M311.jpg',), ('M3LMLO.jpg',), ('B112LMLO.jpg',), ('B243.jpg',), ('B64RCC.jpg',), ('M242.jpg',), ('B319.jpg',), ('M300.jpg',), ('M105LMLO.jpg',), ('M222.jpg',), ('B5LMLO.jpg',), ('B124.jpg',), ('M4LMLO.jpg',), ('M82LCC.jpg',), ('M207.jpg',), ('M18RCC.jpg',), ('B162.jpg',), ('B190.jpg',), ('M250.jpg',), ('M323.jpg',), ('M17LMLO.jpg',), ('M80LMLO.jpg',), ('M55RMLO.jpg',), ('M33LMLO.jpg',), ('B229.jpg',), ('M315.jpg',), ('B221.jpg',), ('M102LCC.jpg',), ('M116LCC.jpg',), ('B298.jpg',), ('B4RMLO.jpg',), ('B78RMLO.jpg',), ('M67RCC.jpg',), ('B158.jpg',), ('M185.jpg',), ('M81RMLO.jpg',), ('M103LCC.jpg',), ('B111RMLO.jpg',), ('B32LMLO.jpg',), ('B57RCC.jpg',), ('M230.jpg',), ('M176.jpg',), ('B95LCC.jpg',), ('B209.jpg',), ('B271.jpg',), ('B18RCC.jpg',), ('B268.jpg',), ('M10RCC.jpg',), ('B317.jpg',), ('B176.jpg',), ('B87RMLO.jpg',), ('M276.jpg',), ('M38LMLO.jpg',), ('B115RMLO.jpg',), ('B9RMLO.jpg',), ('M90RMLO.jpg',), ('B157.jpg',), ('M325.jpg',), ('B21LCC.jpg',), ('B273.jpg',), ('M159.jpg',), ('M212.jpg',), ('B55RMLO.jpg',), ('M91LCC.jpg',), ('B10LMLO.jpg',), ('B301.jpg',), ('B257.jpg',), ('B47LCC.jpg',), ('M4LCC.jpg',), ('M23LMLO.jpg',), ('B315.jpg',), ('B235.jpg',), ('B40RMLO.jpg',), ('B277.jpg',), ('B240.jpg',), ('M188.jpg',), ('B83LCC.jpg',), ('B181.jpg',), ('B324.jpg',), ('B62LCC.jpg',), ('B292.jpg',), ('B11RMLO.jpg',), ('B174.jpg',), ('M246.jpg',), ('B60LMLO.jpg',), ('M309.jpg',), ('B13RMLO.jpg',), ('M205.jpg',), ('B185.jpg',), ('M124.jpg',), ('M334.jpg',), ('B118LCC.jpg',), ('B28LCC.jpg',), ('M206.jpg',), ('M3LCC.jpg',), ('B13RCC.jpg',), ('M78LMLO.jpg',), ('M170.jpg',), ('M69LCC.jpg',), ('B64RMLO.jpg',), ('B12RCC.jpg',), ('B256.jpg',), ('B68RMLO.jpg',), ('M175.jpg',), ('M181.jpg',), ('M233.jpg',), ('B58LMLO.jpg',), ('M40LMLO.jpg',), ('M100RCC.jpg',), ('M39RCC.jpg',), ('M7LMLO.jpg',), ('B183.jpg',), ('B96RMLO.jpg',), ('B182.jpg',), ('M12LCC.jpg',), ('B29RCC.jpg',), ('B73RMLO.jpg',), ('B208.jpg',), ('B90RCC.jpg',), ('B24RCC.jpg',), ('M115LMLO.jpg',), ('M200.jpg',), ('M75RMLO.jpg',), ('M71LMLO.jpg',), ('M272.jpg',), ('M63LCC.jpg',), ('M166.jpg',), ('M41RCC.jpg',), ('B79LCC.jpg',), ('M25LCC.jpg',), ('B285.jpg',), ('M55RCC.jpg',), ('B61LMLO.jpg',), ('M67RMLO.jpg',), ('B155.jpg',), ('M91LMLO.jpg',), ('M53LMLO.jpg',), ('B323.jpg',), ('M216.jpg',), ('M203.jpg',), ('M240.jpg',), ('B166.jpg',), ('B135.jpg',), ('M301.jpg',), ('B76LMLO.jpg',), ('B307.jpg',), ('M261.jpg',), ('B238.jpg',), ('B218.jpg',), ('B253.jpg',), ('M46LMLO.jpg',), ('M183.jpg',), ('M100RMLO.jpg',), ('M117RMLO.jpg',), ('B92RMLO.jpg',), ('M64LMLO.jpg',), ('B20RCC.jpg',), ('M115LCC.jpg',), ('B164.jpg',), ('M228.jpg',), ('M30RCC.jpg',), ('B2LCC.jpg',), ('B206.jpg',), ('M294.jpg',), ('M191.jpg',), ('M104LMLO.jpg',), ('M160.jpg',), ('M75LMLO.jpg',), ('B159.jpg',), ('B63LCC.jpg',), ('B107LCC.jpg',), ('B121.jpg',), ('M56LMLO.jpg',), ('M265.jpg',), ('B133.jpg',), ('B194.jpg',), ('B140.jpg',), ('B246.jpg',), ('M253.jpg',), ('B215.jpg',), ('B202.jpg',), ('M141.jpg',), ('M204.jpg',), ('B70LMLO.jpg',), ('M286.jpg',), ('M319.jpg',), ('B173.jpg',), ('M107RMLO.jpg',), ('B42LMLO.jpg',), ('M229.jpg',), ('M103LMLO.jpg',), ('B106RCC.jpg',), ('B116LCC.jpg',), ('M120LCC.jpg',), ('M167.jpg',), ('B23LMLO.jpg',), ('M102LMLO.jpg',), ('B237.jpg',), ('M63LMLO.jpg',), ('M24LMLO.jpg',), ('M326.jpg',), ('M106RMLO.jpg',), ('M225.jpg',), ('M173.jpg',), ('B6LMLO.jpg',), ('M95RMLO.jpg',), ('M338.jpg',), ('M94RCC.jpg',), ('B258.jpg',), ('B311.jpg',), ('M333.jpg',), ('B217.jpg',), ('M13RCC.jpg',), ('M259.jpg',), ('B211.jpg',), ('M169.jpg',), ('B197.jpg',), ('M76LCC.jpg',), ('B84RCC.jpg',), ('M302.jpg',), ('B108LMLO.jpg',), ('B167.jpg',), ('B198.jpg',), ('B1RCC.jpg',), ('M14LMLO.jpg',), ('M73RCC.jpg',), ('M2LMLO.jpg',), ('M60LCC.jpg',), ('B89LMLO.jpg',), ('B122.jpg',), ('M11RMLO.jpg',), ('M318.jpg',), ('B73RCC.jpg',), ('M24LCC.jpg',), ('M232.jpg',), ('B34LMLO.jpg',), ('M52LCC.jpg',), ('M274.jpg',), ('B14LCC.jpg',), ('B272.jpg',), ('M30RMLO.jpg',), ('B29RMLO.jpg',), ('B316.jpg',), ('M12LMLO.jpg',), ('B289.jpg',), ('M15RMLO.jpg',), ('B7RCC.jpg',), ('M147.jpg',), ('B43LMLO.jpg',), ('M105LCC.jpg',), ('M144.jpg',), ('M41RMLO.jpg',), ('B302.jpg',), ('B154.jpg',), ('M6RMLO.jpg',), ('B12RMLO.jpg',), ('M217.jpg',), ('M70RCC.jpg',), ('M224.jpg',), ('B325.jpg',), ('M8LMLO.jpg',), ('B213.jpg',), ('B329.jpg',), ('B82RMLO.jpg',), ('B274.jpg',), ('B41RMLO.jpg',), ('B15LCC.jpg',), ('M254.jpg',), ('B69LCC.jpg',), ('B327.jpg',), ('M16LMLO.jpg',), ('M238.jpg',), ('B279.jpg',), ('M187.jpg',), ('M109LMLO.jpg',), ('M93RMLO.jpg',), ('B59RMLO.jpg',), ('M20RMLO.jpg',), ('M59LCC.jpg',), ('M96RMLO.jpg',), ('B116LMLO.jpg',), ('M15RCC.jpg',), ('M146.jpg',), ('B297.jpg',), ('B22LMLO.jpg',), ('B161.jpg',), ('M57LCC.jpg',), ('M88RCC.jpg',), ('B169.jpg',), ('M184.jpg',), ('B261.jpg',), ('M28RMLO.jpg',), ('M137.jpg',), ('B191.jpg',), ('B31RMLO.jpg',), ('B10LCC.jpg',), ('M29LMLO.jpg',), ('M45RCC.jpg',), ('B34RCC.jpg',), ('B282.jpg',), ('B81RMLO.jpg',), ('M31RCC.jpg',), ('B97RCC.jpg',), ('B269.jpg',), ('B200.jpg',), ('M89RMLO.jpg',), ('M189.jpg',), ('M111LCC.jpg',), ('M289.jpg',), ('B283.jpg',), ('M172.jpg',), ('M87LMLO.jpg',), ('B330.jpg',), ('B150.jpg',), ('M138.jpg',), ('B141.jpg',), ('B326.jpg',), ('M266.jpg',), ('B160.jpg',), ('M305.jpg',), ('M92LMLO.jpg',), ('M139.jpg',), ('M202.jpg',), ('B32LCC.jpg',), ('M130.jpg',), ('B152.jpg',), ('B86LCC.jpg',), ('B83LMLO.jpg',), ('M132.jpg',), ('M76LMLO.jpg',), ('B16RCC.jpg',), ('B290.jpg',), ('M190.jpg',), ('M13RMLO.jpg',), ('M199.jpg',), ('M194.jpg',), ('B305.jpg',), ('B33LCC.jpg',), ('M83RMLO.jpg',), ('B17LMLO.jpg',), ('B199.jpg',), ('M79LCC.jpg',), ('B105RCC.jpg',), ('M299.jpg',), ('B123.jpg',), ('M71LCC.jpg',), ('B27RMLO.jpg',), ('B104RCC.jpg',), ('M136.jpg',), ('B227.jpg',), ('M36RMLO.jpg',), ('M69LMLO.jpg',), ('M77RCC.jpg',), ('M307.jpg',), ('M234.jpg',), ('M174.jpg',), ('M1RCC.jpg',), ('B187.jpg',), ('M84RMLO.jpg',), ('M35LMLO.jpg',), ('B309.jpg',), ('B288.jpg',), ('B17LCC.jpg',), ('B139.jpg',), ('M209.jpg',), ('B68RCC.jpg',), ('B230.jpg',), ('B94RCC.jpg',), ('B294.jpg',), ('B306.jpg',), ('B1RMLO.jpg',), ('B49RMLO.jpg',), ('B163.jpg',), ('M154.jpg',), ('M65LCC.jpg',), ('B74LCC.jpg',), ('M108RMLO.jpg',), ('M277.jpg',), ('B70LCC.jpg',), ('M58RCC.jpg',), ('B9RCC.jpg',), ('M221.jpg',), ('M256.jpg',), ('B79LMLO.jpg',), ('B96RCC.jpg',), ('B101LMLO.jpg',), ('B4RCC.jpg',), ('B192.jpg',), ('M268.jpg',), ('B112LCC.jpg',), ('M49RCC.jpg',), ('B34LCC.jpg',), ('B222.jpg',), ('B90RMLO.jpg',), ('M82LMLO.jpg',), ('M195.jpg',), ('M227.jpg',), ('B78LMLO.jpg',), ('M158.jpg',), ('M22RMLO.jpg',), ('B264.jpg',), ('M50RCC.jpg',), ('B131.jpg',), ('B2LMLO.jpg',), ('M86RCC.jpg',), ('M131.jpg',), ('B308.jpg',), ('B146.jpg',), ('M267.jpg',), ('M177.jpg',), ('B24RMLO.jpg',), ('M9LMLO.jpg',), ('M99RMLO.jpg',), ('B42LCC.jpg',), ('M97LCC.jpg',), ('B93RMLO.jpg',), ('B300.jpg',), ('M123.jpg',), ('M37RMLO.jpg',), ('B111RCC.jpg',), ('B74LMLO.jpg',), ('M33LCC.jpg',), ('M2LCC.jpg',), ('M34LMLO.jpg',), ('M231.jpg',), ('M223.jpg',), ('B244.jpg',), ('M235.jpg',), ('M10RMLO.jpg',), ('B119LCC.jpg',), ('B98LMLO.jpg',), ('M110LCC.jpg',), ('B234.jpg',), ('M118RCC.jpg',), ('M149.jpg',), ('B30LMLO.jpg',), ('B156.jpg',), ('M57LMLO.jpg',), ('B53LMLO.jpg',), ('M193.jpg',), ('B248.jpg',), ('M321.jpg',), ('B204.jpg',), ('B245.jpg',), ('M324.jpg',), ('M17LCC.jpg',), ('M75RCC.jpg',), ('M134.jpg',), ('B259.jpg',), ('M48RMLO.jpg',), ('M287.jpg',), ('B145.jpg',), ('M9LCC.jpg',), ('B28LMLO.jpg',), ('B115RCC.jpg',), ('M275.jpg',), ('B134.jpg',), ('M270.jpg',), ('B50LMLO.jpg',), ('B58LCC.jpg',), ('M5LCC.jpg',), ('B195.jpg',), ('M5LMLO.jpg',), ('B291.jpg',), ('M119LCC.jpg',), ('M180.jpg',), ('M297.jpg',), ('M113RMLO.jpg',), ('B284.jpg',), ('B254.jpg',), ('B84RMLO.jpg',), ('M295.jpg',), ('B109LMLO.jpg',), ('M162.jpg',), ('M125.jpg',), ('B219.jpg',), ('B46RMLO.jpg',), ('M66LMLO.jpg',), ('B224.jpg',), ('B7RMLO.jpg',), ('B75LMLO.jpg',), ('B18RMLO.jpg',), ('B94RMLO.jpg',), ('M46LCC.jpg',), ('M21RMLO.jpg',), ('M283.jpg',), ('B6LCC.jpg',), ('M165.jpg',), ('B214.jpg',), ('M335.jpg',), ('B328.jpg',), ('B103RMLO.jpg',), ('B220.jpg',), ('B26RCC.jpg',), ('B107LMLO.jpg',), ('M65LMLO.jpg',), ('M60LMLO.jpg',), ('B196.jpg',), ('M75LCC.jpg',), ('M298.jpg',), ('M48RCC.jpg',), ('B179.jpg',), ('B275.jpg',), ('M95RCC.jpg',), ('M308.jpg',), ('M264.jpg',), ('M56LCC.jpg',), ('M79LMLO.jpg',), ('B89LCC.jpg',), ('B119LMLO.jpg',), ('M285.jpg',), ('B37RMLO.jpg',), ('B270.jpg',), ('M271.jpg',), ('M243.jpg',), ('B72RCC.jpg',), ('M107RCC.jpg',), ('B129.jpg',), ('M241.jpg',), ('M7LCC.jpg',), ('M108RCC.jpg',), ('M81RCC.jpg',), ('B97RMLO.jpg',), ('M1RMLO.jpg',), ('M11RCC.jpg',), ('B117RMLO.jpg',), ('M328.jpg',), ('B137.jpg',), ('B212.jpg',), ('B56LMLO.jpg',), ('M106RCC.jpg',), ('B104RMLO.jpg',), ('B103RCC.jpg',), ('B318.jpg',), ('B128.jpg',), ('B71RMLO.jpg',), ('B51LMLO.jpg',), ('B247.jpg',), ('B242.jpg',), ('B15LMLO.jpg',), ('M332.jpg',), ('M49RMLO.jpg',), ('M61LMLO.jpg',), ('B99RCC.jpg',), ('B267.jpg',), ('B80RMLO.jpg',), ('M186.jpg',), ('B114RCC.jpg',), ('B8LMLO.jpg',), ('B295.jpg',), ('M45RMLO.jpg',), ('B35LCC.jpg',), ('M18RMLO.jpg',), ('M35LCC.jpg',), ('B207.jpg',), ('M288.jpg',), ('B66RCC.jpg',), ('B114RMLO.jpg',), ('B148.jpg',), ('B11RCC.jpg',), ('M163.jpg',), ('M293.jpg',), ('M116LMLO.jpg',), ('B44LMLO.jpg',), ('B172.jpg',), ('M40LCC.jpg',), ('M101RCC.jpg',), ('M179.jpg',), ('M155.jpg',), ('M127.jpg',), ('B127.jpg',), ('B143.jpg',), ('B19LMLO.jpg',), ('M104LCC.jpg',), ('M112LCC.jpg',), ('M211.jpg',), ('M182.jpg',), ('B126.jpg',), ('M198.jpg',), ('B170.jpg',), ('M25LMLO.jpg',), ('M14LCC.jpg',), ('B132.jpg',), ('B108LCC.jpg',), ('B142.jpg',), ('B287.jpg',), ('M126.jpg',), ('M327.jpg',), ('B210.jpg',), ('M322.jpg',), ('M80LCC.jpg',), ('B310.jpg',), ('M62LCC.jpg',), ('M304.jpg',), ('M171.jpg',), ('B65RMLO.jpg',), ('M140.jpg',), ('M290.jpg',), ('M151.jpg',), ('B201.jpg',), ('M72LCC.jpg',), ('M58RMLO.jpg',), ('M89RCC.jpg',), ('M281.jpg',), ('M220.jpg',), ('M6RCC.jpg',), ('M316.jpg',), ('M192.jpg',), ('M8LCC.jpg',), ('M153.jpg',), ('B203.jpg',), ('M317.jpg',), ('B27RCC.jpg',), ('M20RCC.jpg',), ('M44LCC.jpg',), ('B3LMLO.jpg',), ('M88RMLO.jpg',), ('M279.jpg',), ('M244.jpg',), ('B69LMLO.jpg',), ('B87RCC.jpg',), ('M258.jpg',), ('M109LCC.jpg',), ('B71RCC.jpg',), ('M47RCC.jpg',), ('B38LMLO.jpg',), ('M98LMLO.jpg',), ('B171.jpg',), ('M96RCC.jpg',), ('M50RMLO.jpg',), ('B136.jpg',), ('B39LCC.jpg',), ('B189.jpg',), ('B25RCC.jpg',), ('M113RCC.jpg',), ('B39LMLO.jpg',), ('M51RCC.jpg',), ('M38LCC.jpg',), ('B16RMLO.jpg',), ('B26RMLO.jpg',), ('M101RMLO.jpg',), ('B57RMLO.jpg',), ('B67LMLO.jpg',), ('M329.jpg',), ('M42RMLO.jpg',), ('B252.jpg',), ('M39RMLO.jpg',), ('M157.jpg',), ('M27LMLO.jpg',), ('B165.jpg',), ('B77LCC.jpg',), ('M59LMLO.jpg',), ('M152.jpg',), ('B54RCC.jpg',), ('M62LMLO.jpg',), ('B21LMLO.jpg',), ('M72LMLO.jpg',), ('M111LMLO.jpg',), ('M145.jpg',), ('B138.jpg',), ('M262.jpg',), ('B99RMLO.jpg',), ('M26RMLO.jpg',), ('B48LMLO.jpg',), ('B232.jpg',), ('M26RCC.jpg',), ('M306.jpg',), ('M143.jpg',), ('M248.jpg',), ('B314.jpg',), ('M86RMLO.jpg',), ('B109LCC.jpg',), ('B263.jpg',), ('B14LMLO.jpg',), ('B262.jpg',), ('M29LCC.jpg',), ('B77LMLO.jpg',), ('M66LCC.jpg',), ('M284.jpg',), ('B250.jpg',), ('M164.jpg',), ('M43RMLO.jpg',), ('M122.jpg',), ('M54LMLO.jpg',), ('B249.jpg',), ('B281.jpg',), ('M22RCC.jpg',), ('M142.jpg',), ('M92LCC.jpg',), ('M128.jpg',), ('B45LMLO.jpg',), ('M178.jpg',), ('B223.jpg',), ('M133.jpg',), ('M292.jpg',), ('B38LCC.jpg',), ('M214.jpg',), ('M263.jpg',), ('B88RMLO.jpg',), ('B299.jpg',), ('M42RCC.jpg',), ('M118RMLO.jpg',), ('B85RMLO.jpg',), ('B286.jpg',), ('M280.jpg',), ('M32LMLO.jpg',), ('M129.jpg',), ('M64LCC.jpg',), ('M98LCC.jpg',), ('B178.jpg',), ('B25RMLO.jpg',), ('B251.jpg',), ('B34RMLO.jpg',), ('B320.jpg',), ('M78LCC.jpg',), ('B260.jpg',), ('B100RMLO.jpg',), ('M278.jpg',), ('M282.jpg',), ('M331.jpg',), ('B19LCC.jpg',), ('M303.jpg',), ('M251.jpg',), ('M255.jpg',), ('B78RCC.jpg',), ('B33LMLO.jpg',), ('M252.jpg',), ('B175.jpg',), ('M249.jpg',), ('M99RCC.jpg',), ('B236.jpg',), ('M27LCC.jpg',), ('B147.jpg',), ('M19LCC.jpg',), ('B78LCC.jpg',), ('B52LMLO.jpg',), ('B93RCC.jpg',), ('B312.jpg',), ('B20RMLO.jpg',), ('B153.jpg',), ('B54RMLO.jpg',), ('M237.jpg',), ('B35LMLO.jpg',), ('B255.jpg',), ('B48LCC.jpg',), ('B120LCC.jpg',), ('B98LCC.jpg',), ('B113LMLO.jpg',), ('B296.jpg',), ('B92RCC.jpg',), ('M260.jpg',), ('M245.jpg',), ('B144.jpg',), ('M28RCC.jpg',), ('B231.jpg',), ('B266.jpg',), ('B5LCC.jpg',), ('B322.jpg',), ('B239.jpg',), ('B265.jpg',), ('B8LCC.jpg',), ('B36RMLO.jpg',), ('M219.jpg',), ('M16LCC.jpg',), ('M330.jpg',), ('M19LMLO.jpg',), ('B186.jpg',), ('B180.jpg',), ('B100RCC.jpg',), ('B241.jpg',), ('B151.jpg',), ('M257.jpg',), ('M161.jpg',), ('M112LMLO.jpg',), ('B102RMLO.jpg',), ('B101LCC.jpg',), ('B62LMLO.jpg',), ('M168.jpg',), ('M73RMLO.jpg',), ('M197.jpg',), ('M77RMLO.jpg',), ('M236.jpg',), ('M239.jpg',), ('M148.jpg',), ('B52LCC.jpg',), ('B105RMLO.jpg',), ('B130.jpg',), ('M43RCC.jpg',), ('M247.jpg',), ('M85LMLO.jpg',), ('B177.jpg',), ('B149.jpg',), ('B117RCC.jpg',), ('B43LCC.jpg',), ('B321.jpg',), ('M310.jpg',), ('B59RCC.jpg',), ('B188.jpg',), ('M120LMLO.jpg',), ('B184.jpg',), ('B313.jpg',), ('M213.jpg',), ('B216.jpg',), ('M314.jpg',), ('M296.jpg',), ('M215.jpg',), ('B205.jpg',), ('B41RCC.jpg',), ('M291.jpg',), ('B91LMLO.jpg',), ('M74LCC.jpg',), ('B280.jpg',), ('M210.jpg',), ('B168.jpg',)]
correct num: 856
uncorrect num: 0
train datasets length: 856
Test: Loss:0.0000 Acc:1.0000
